{"version":3,"sources":["components/popup-modal/PopupModal.module.css","components/pano-nav-menu/PanoNavMenu.module.css","components/welcome-video/WelcomeVideo.module.css","components/header/Header.module.css","components/button/AppButton.module.css","containers/panorama/Panorama.module.css","components/logo/Logo.module.css","components/loading-screen/LoadingScreen.module.css","containers/manage-event/ManageEvent.module.css","components/add-panorama/AddPanorama.module.css","components/edit-panorama/EditPanorama.module.css","hooks/store/useAppStore.js","constants/app.constant.js","containers/panorama/Camera.js","containers/panorama/ImageSphere.js","hooks/store/getters.js","constants/hotspot.constant.js","hooks/store/setters.js","components/hotspots/DefaultHotspot.js","components/hotspots/MoveHotspot.js","components/popup-modal/PopupModal.js","components/hotspots/IframeHotspot.js","components/hotspots/UrlHotspot.js","components/hotspots/PatchVideo3D.js","components/scroll-content/ScrollContent.js","components/pdf-viewer/PDFViewer.js","components/hotspots/PDFHotspot.js","components/hotspots/Hotspot.js","containers/panorama/PanoHotspots.js","containers/panorama/Panorama.js","components/logo/Logo.js","components/pano-nav-menu/PanoNavMenu.js","components/user-menu/UserMenu.js","components/header/Header.js","components/welcome-video/WelcomeVideo.js","components/loading-screen/LoadingScreen.js","components/preload/PreloadPanos.js","containers/event/Event.js","components/off-canvas-modal/OffCanvasModal.js","components/input/Input.js","components/button/AppButton.js","components/add-panorama/AddPanoramaModal.js","components/add-panorama/AddPanoramaButton.js","components/edit-panorama/EditPanoramaModal.js","components/edit-panorama/EditPanoramaButton.js","components/event-configuration/EventConfigurationModal.js","components/event-configuration/EventConfigurationButton.js","components/hotspot-config-modal/MoveHotspotForm.js","components/hotspot-config-modal/IframeHotspotForm.js","components/hotspot-config-modal/URLHotspotForm.js","components/hotspot-config-modal/PatchVideo3DHotspotForm.js","components/hotspot-config-modal/PDFHotspotForm.js","components/hotspot-config-modal/HotspotDetailsForm.js","components/hotspot-config-modal/HotspotConfigModal.js","containers/manage-event/ManageEvent.js","App.js","reportWebVitals.js","index.js","components/pdf-viewer/PDFViewer.module.css","components/hotspots/Hotspot.module.css","components/input/Input.module.css","components/off-canvas-modal/OffCanvasModal.module.css","components/user-menu/UserMenu.module.css","components/event-configuration/EventConfiguration.module.css"],"names":["module","exports","config","MEDIA_BASE_URL","process","LANGUAGES","ENGLISH","ARABIC","Camera","props","pan","tilt","defaultZoom","panoId","cameraRef","useRef","useState","setPosition","useEffect","current","parsedPan","parseFloat","parsedTilt","position","THREE","setFromSphericalCoords","degToRad","getPosition","x","y","z","set","normalize","negate","updateProjectionMatrix","console","log","PerspectiveCamera","makeDefault","fov","ref","ImageSphere","url","addNewHotspot","texture","useLoader","mouse","useThree","gl","setPixelRatio","window","devicePixelRatio","useMemo","encoding","scale","onDoubleClick","e","point","attach","args","side","map","transparent","fog","color","depthWrite","useStore","loggedInUserName","setLoggedInUserName","state","appLanguage","setAppLanguage","lang","forceRTL","setAppForceRTL","value","event","addNewPano","newPano","panos","currentPanoIdx","setCurrentPano","panoIndex","updateCurrentPano","data","p","i","addHotspotInCurrentPano","hotspots","showHotspotConfigModal","setShowHotspotConfigModal","currentHotspot","setCurrentHotspot","updateCurrentHotspot","hotspotIdx","hp","hpIdx","deleteCurrentHotspot","filter","get","api","persist","name","useAppStore","create","panosSelector","getCurrentPanoSelector","showHotspotConfigModalSelector","getCurrentHotspotSelector","forceRTLSelector","HOTSPOT_TYPES","MOVE","IFRAME","URL","PATCHVIDEO3D","PDF","HOTSPOT_INITIAL_STATE","id","Date","now","hotspotIcon","type","addNewPanoSelector","setCurrentPanoSelector","updateCurrentPanoSelector","addHotspotInCurrentPanoSelector","setShowHotspotConfigModalSelector","setCurrentHotspotSelector","updateCurrentHotspotSelector","deleteCurrentHotspotSelector","setAppLanguageSelector","setAppForceRTLSelector","DefaultHotspot","item","transKey","defaultKey","index","hotspot","onClick","viewMode","handleHotspotClick","editHotspot","Html","scaleFactor","center","zIndexRange","className","styles","hotspotTextContainer","hotspotDisplayName","hotspotImg","src","alt","MoveHotspot","goToPano","findIndex","PopupModal","show","onHide","size","fullscreen","title","bodyPadding","children","Modal","centered","dialogClassName","modalDialog","Header","closeButton","modalHeader","Title","as","Body","IframeHotspot","showModal","setShowModal","showItemModal","setShowItemModal","setItem","viewItem","translatedValue","disableModal","iframeDetails","find","d","ListGroup","variant","idx","Item","Button","iframeWrapper","onLoad","UrlHotspot","urlDetails","PatchVideo3D","patchVideo3D","patchSource","patchHeight","patchWidth","setTexture","setShow","billboard","setShowVideo","vid","document","getElementById","texture1","setTimeout","video","querySelector","body","removeChild","removeVideo","playsInline","muted","loop","autoPlay","width","height","Billboard","follow","lockX","lockY","lockZ","ScrollContent","defaultProps","pdfjs","GlobalWorkerOptions","workerSrc","version","PDFViewer","pdfWidth","numPages","setNumPages","pageNumber","setPageNumber","loadingDoc","setLoadingDoc","scaleNo","setScaleNo","changePage","offset","prevPageNumber","scalePdf","prev","pdfNavbar","pdfnavDisabled","pdfNav","disabled","scrollIntoView","pdfWrapper","pdfContentWrapper","file","onLoadSuccess","loading","Array","apply","length","val","pages","pageWrapper","renderAnnotationLayer","renderTextLayer","PDFHotspot","setPdfWidth","pdfViewerRef","getBoundingClientRect","pdfDetails","Hotspot","PanoHotspots","Panorama","currentPano","group","image","cameraFree","canvasWrapper","alpha","colorManagement","fallback","OrbitControls","enableKeys","rotateSpeed","enableZoom","enablePan","dampingFactor","enabled","minDistance","maxDistance","Logo","logo","PanoNavMenu","panoNav","navMenuItem","languageOptions","Object","values","UserMenu","userMenu","userMenuItem","Dropdown","Toggle","langSelectorBtn","Menu","handleLanguageChange","appHeader","WelcomeVideo","onVideoEnded","welcomeVideoWrapper","welcomeVideo","controls","onEnded","onPlay","skipBtn","LoadingScreen","startYourExperience","percentage","loadingScreenWrapper","ProgressBar","animated","PreloadPanos","panoImageUrls","textures","useTexture","useProgress","progress","active","total","errors","loaded","t","Event","showLoader","setShowLoader","showWelcomeVideo","setShowWelcomeVideo","showPanorama","setShowPanorama","loadPercentValue","setLoadPercentValue","Loader","OffCanvasModal","onClose","footer","offCanvasModalContainer","modalTitle","modalCloseBtn","modalBody","modalFooter","offCanvasModalBackdrop","InputElement","input","textarea","select","options","o","label","FormError","error","Input","formGroup","AppButton","fullWidth","appButton","panoFormInitialState","zoom","AddPanoramaModal","handleClose","panoForm","setPanoForm","handleInputChange","target","handleFormSubmit","ModalFooter","Row","Col","md","StyleSheet","addPanoramaForm","onChange","checked","AddPanoramaButton","AddPanoBtn","EditPanoramaModal","nameArabic","EditPanoramaButton","EditPanoBtn","EventConfigurationModal","eventData","showExportData","setShowExportData","eventConfigForm","eventExportDataHolder","text","JSON","stringify","navigator","clipboard","writeText","execCommand","alert","EventConfigurationButton","EventConfigBtn","MoveHotspotForm","panosOptions","setPanoOptions","Card","transitionVideo","FORM_DATA_KEY","IframeHotspotForm","hotspotForm","setHotspotForm","handleFormInputChange","formIdx","valueKey","form","bg","titleArabic","f","fIdx","deleteForm","newForm","URLHotspotForm","PatchVideo3DHotspotForm","PDFHotspotForm","HotspotDetailsForm","hotspotTypeOptions","v","HotspotConfigModal","deleteHotspot","handleModalClose","handlePositionChange","hotspotConfigForm","toFixed","ManageEvent","fabContainer","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.03f22c40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"forceRTL\":\"PopupModal_forceRTL__G0tWD\",\"modalHeader\":\"PopupModal_modalHeader__1koSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panoNav\":\"PanoNavMenu_panoNav__vbxp-\",\"navMenuItem\":\"PanoNavMenu_navMenuItem__2N40t\",\"forceRTL\":\"PanoNavMenu_forceRTL__3yq3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"welcomeVideoWrapper\":\"WelcomeVideo_welcomeVideoWrapper__3B7Na\",\"skipBtn\":\"WelcomeVideo_skipBtn__3_-nx\",\"welcomeVideo\":\"WelcomeVideo_welcomeVideo__h1eI-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appHeader\":\"Header_appHeader__oP8Op\",\"forceRTL\":\"Header_forceRTL__2vTqt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appButton\":\"AppButton_appButton__19VXD\",\"fullWidth\":\"AppButton_fullWidth__zO1dR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvasWrapper\":\"Panorama_canvasWrapper__DbRtH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__kRrNg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingScreenWrapper\":\"LoadingScreen_loadingScreenWrapper__3J8pO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fabContainer\":\"ManageEvent_fabContainer__1N-LR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddPanoBtn\":\"AddPanorama_AddPanoBtn__29tjh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditPanoBtn\":\"EditPanorama_EditPanoBtn__1Q9c-\"};","import create from 'zustand';\r\nimport { persist } from \"zustand/middleware\"\r\nimport { LANGUAGES } from '../../constants/app.constant';\r\n\r\n/********** Middlewares ***********/\r\nconst log = config => (set, get, api) => config(args => {\r\n    // console.log(\"  applying\", args)\r\n    set(args)\r\n    // console.log(\"  new state\", get())\r\n}, get, api)\r\n\r\n\r\n\r\n/********** Store ***********/\r\nlet useStore = (set => ({\r\n\r\n    loggedInUserName: \"Vineeth\",\r\n    setLoggedInUserName: (loggedInUserName) => set(state => ({ loggedInUserName })),\r\n\r\n    appLanguage: LANGUAGES.ENGLISH,\r\n    setAppLanguage: lang => set(state => ({ appLanguage: lang })),\r\n\r\n    forceRTL: false,\r\n    setAppForceRTL: value => set(state => ({ forceRTL: value })),\r\n    \r\n    event: {\r\n        \"name\": \"Roshn 360\",\r\n        \"panos\": [\r\n            {\r\n                \"id\": 1630744620098,\r\n                \"name\": \"Master Plan\",\r\n                \"image\": \"media/images/panorama/master-plan.jpg\",\r\n                \"pan\": \"90\",\r\n                \"tilt\": \"-55\",\r\n                \"zoom\": 2,\r\n                \"cameraFree\": true,\r\n                \"hotspots\": [\r\n                    {\r\n                        \"id\": 1631084243691,\r\n                        \"name\": \"ROSHN VILLAS\",\r\n                        \"hotspotIcon\": \"media/images/hotspot/info.gif\",\r\n                        \"type\": \"MOVE\",\r\n                        \"position\": {\r\n                            \"x\": -661.7007821807441,\r\n                            \"y\": -748.8630930807877,\r\n                            \"z\": -4.470330770242616\r\n                        },\r\n                        \"goToPano\": \"1631013521534\",\r\n                        \"nameArabic\": \"فيلات روشن\"\r\n                    },\r\n                    {\r\n                        \"id\": 1631084278804,\r\n                        \"name\": \"LIVING STREET\",\r\n                        \"hotspotIcon\": \"media/images/hotspot/info.gif\",\r\n                        \"type\": \"MOVE\",\r\n                        \"position\": {\r\n                            \"x\": -528.8664086669486,\r\n                            \"y\": -749.2982196798473,\r\n                            \"z\": 396.5411180341429\r\n                        },\r\n                        \"goToPano\": \"1630744621098\",\r\n                        \"nameArabic\": \"شارع المعيشة\"\r\n                    }\r\n                ],\r\n                \"nameArabic\": \"خطة رئيسية\"\r\n            },\r\n            {\r\n                \"id\": 1630744621098,\r\n                \"name\": \"Living Street\",\r\n                \"image\": \"media/images/panorama/living-street-2.jpg\",\r\n                \"pan\": \"90\",\r\n                \"tilt\": \"0\",\r\n                \"zoom\": 0,\r\n                \"cameraFree\": true,\r\n                \"hotspots\": [\r\n                    {\r\n                        \"id\": 1631084180320,\r\n                        \"name\": \"ROSHN DEMO\",\r\n                        \"hotspotIcon\": \"media/images/hotspot/info.gif\",\r\n                        \"type\": \"MOVE\",\r\n                        \"position\": {\r\n                            \"x\": -272.395276576989,\r\n                            \"y\": -115.84817042332769,\r\n                            \"z\": -953.1071342788318\r\n                        },\r\n                        \"goToPano\": \"1631013521534\"\r\n                    },\r\n                    {\r\n                        \"id\": 1631084359429,\r\n                        \"name\": \"EXPLORE\",\r\n                        \"hotspotIcon\": \"\",\r\n                        \"type\": \"MOVE\",\r\n                        \"position\": {\r\n                            \"x\": -980.0471606417398,\r\n                            \"y\": 179.04882229075312,\r\n                            \"z\": 59.97032057349637\r\n                        },\r\n                        \"goToPano\": \"1631013521534\",\r\n                        \"nameArabic\": \"يكتشف\"\r\n                    }\r\n                ],\r\n                \"nameArabic\": \"شارع المعيشة\"\r\n            },\r\n            {\r\n                \"id\": 1631013521534,\r\n                \"name\": \"Demo\",\r\n                \"image\": \"media/images/panorama/roshn-bright.jpg\",\r\n                \"pan\": \"90\",\r\n                \"tilt\": \"0\",\r\n                \"zoom\": null,\r\n                \"cameraFree\": true,\r\n                \"hotspots\": [\r\n                    {\r\n                        \"id\": 1631082780445,\r\n                        \"name\": \"CLICK TO NAVIGATE THE INTERIORS\",\r\n                        \"hotspotIcon\": \"media/images/hotspot/info.gif\",\r\n                        \"type\": \"IFRAME\",\r\n                        \"position\": {\r\n                            \"x\": -775.5931193875806,\r\n                            \"y\": -13.403679590659973,\r\n                            \"z\": 628.2246347274607\r\n                        },\r\n                        \"iframeDetails\": [\r\n                            {\r\n                                \"title\": \"MATTERPORT TOUR\",\r\n                                \"url\": \"https://my.matterport.com/show/?m=gjBJPQ1rh3W&back=1\",\r\n                                \"disableModal\": true,\r\n                                \"titleArabic\": \"جولة ثلاثية الأبعاد\"\r\n                            }\r\n                        ],\r\n                        \"nameArabic\": \"انقر للتنقل بين الأجزاء الداخلية\"\r\n                    },\r\n                    {\r\n                        \"id\": 1631083116159,\r\n                        \"name\": \"CLICK TO WATCH OUR VIDEO\",\r\n                        \"hotspotIcon\": \"media/images/hotspot/info.gif\",\r\n                        \"type\": \"IFRAME\",\r\n                        \"position\": {\r\n                            \"x\": -770.22,\r\n                            \"y\": -115.17,\r\n                            \"z\": 623.9\r\n                        },\r\n                        \"iframeDetails\": [\r\n                            {\r\n                                \"title\": \"Roshn Video Tour\",\r\n                                \"url\": \"https://www.roshn.sa/-/media/project/roshn/banner/banner-videos/roshn-mv-final-ar_01.mp4\",\r\n                                \"disableModal\": true,\r\n                                \"titleArabic\": \"جولة فيديو روشن\"\r\n                            }\r\n                        ],\r\n                        \"nameArabic\": \"انقر لمشاهدة الفيديو الخاص بنا\"\r\n                    },\r\n                    {\r\n                        \"id\": 1631083235292,\r\n                        \"name\": \"CLICK TO VIEW OUR WEBSITE\",\r\n                        \"hotspotIcon\": \"media/images/hotspot/info.gif\",\r\n                        \"type\": \"IFRAME\",\r\n                        \"position\": {\r\n                            \"x\": -756.0769700017335,\r\n                            \"y\": -223.30200043440544,\r\n                            \"z\": 612.5179553900493\r\n                        },\r\n                        \"iframeDetails\": [\r\n                            {\r\n                                \"title\": \"ROSHN WEBSITE\",\r\n                                \"url\": \"https://www.roshn.sa/en/sedra\",\r\n                                \"disableModal\": true,\r\n                                \"titleArabic\": \"موقع الكتروني\"\r\n                            }\r\n                        ],\r\n                        \"nameArabic\": \"انقر فوق لعرض موقعنا\"\r\n                    },\r\n                    {\r\n                        \"id\": 1631083994720,\r\n                        \"name\": \"LIVING STREET\",\r\n                        \"hotspotIcon\": \"media/images/hotspot/info.gif\",\r\n                        \"type\": \"MOVE\",\r\n                        \"position\": {\r\n                            \"x\": 137.46335758475817,\r\n                            \"y\": -36.53039114944401,\r\n                            \"z\": -987.8543552966662\r\n                        },\r\n                        \"goToPano\": \"1630744621098\",\r\n                        \"nameArabic\": \"شارع المعيشة\"\r\n                    },\r\n                    {\r\n                        \"id\": 1631084408599,\r\n                        \"name\": \"BIRDS EYE VIEW\",\r\n                        \"hotspotIcon\": \"media/images/hotspot/info.gif\",\r\n                        \"type\": \"MOVE\",\r\n                        \"position\": {\r\n                            \"x\": -526.0144684850493,\r\n                            \"y\": 850.2542866685868,\r\n                            \"z\": -1.0446228229222683\r\n                        },\r\n                        \"goToPano\": \"1630744620098\"\r\n                    }\r\n                ],\r\n                \"nameArabic\": \"تجريبي\"\r\n            }\r\n        ]\r\n    },\r\n    \r\n    addNewPano: newPano => set(state => ({\r\n        event: {\r\n            ...state.event,\r\n            panos: [\r\n                ...state.event.panos,\r\n                newPano\r\n            ]\r\n        }\r\n    })),\r\n    \r\n    currentPanoIdx: 0,\r\n    setCurrentPano: panoIndex => set(state => ({ currentPanoIdx: panoIndex })),\r\n    \r\n    updateCurrentPano: data => set(state => ({\r\n        event: {\r\n            ...state.event,\r\n            panos: [\r\n                ...state.event.panos.map((p, i) => {\r\n                    if (state.currentPanoIdx === i) {\r\n                        return { ...data }\r\n                    }\r\n                    \r\n                    return p\r\n                })\r\n            ]\r\n        }\r\n    })),\r\n    \r\n    addHotspotInCurrentPano: data => set(state => ({\r\n        event: {\r\n            ...state.event,\r\n            panos: [\r\n                ...state.event.panos.map((p, i) => {\r\n                    if (state.currentPanoIdx === i) {\r\n                        return { \r\n                            ...p,\r\n                            hotspots: [\r\n                                ...p.hotspots,\r\n                                data\r\n                            ]\r\n                        }\r\n                    }\r\n                    \r\n                    return p\r\n                })\r\n            ]\r\n        }\r\n    })),\r\n    \r\n    showHotspotConfigModal: false,\r\n    setShowHotspotConfigModal: value => set(state => ({ showHotspotConfigModal: value })),\r\n\r\n    currentHotspot: {},\r\n    setCurrentHotspot: data => set(state => ({ currentHotspot: data })),\r\n\r\n    updateCurrentHotspot: (data, hotspotIdx) => set(state => ({\r\n        event: {\r\n            ...state.event,\r\n            panos: [\r\n                ...state.event.panos.map((p, i) => {\r\n                    if (state.currentPanoIdx === i) {\r\n                        return { \r\n                            ...p,\r\n                            hotspots: p.hotspots.map((hp, hpIdx) => {\r\n                                if (hpIdx === hotspotIdx) {\r\n                                    return { ...hp, ...data }\r\n                                }\r\n\r\n                                return hp\r\n                            })\r\n                        }\r\n                    }\r\n                    \r\n                    return p\r\n                })\r\n            ]\r\n        }\r\n    })),\r\n\r\n    deleteCurrentHotspot: hotspotIdx => set(state => ({\r\n        event: {\r\n            ...state.event,\r\n            panos: [\r\n                ...state.event.panos.map((p, i) => {\r\n                    if (state.currentPanoIdx === i) {\r\n                        return { \r\n                            ...p,\r\n                            hotspots: p.hotspots.filter((hp, hpIdx) => hpIdx !== hotspotIdx)\r\n                        }\r\n                    }\r\n                    \r\n                    return p\r\n                })\r\n            ]\r\n        }\r\n    })),\r\n\r\n}))\r\n\r\nuseStore = log(useStore);\r\nuseStore = persist(useStore, { name: 'AppStore' });\r\n\r\nexport const useAppStore = create(useStore);\r\n","// export const APP_URL = window.location.origin\r\nexport const APP_URL = process.env.REACT_APP_BASE_URL\r\n\r\nexport const MEDIA_BASE_URL = `${APP_URL}`\r\n\r\nexport const PANO_SPHERE_SIZE = 1000\r\n\r\nexport const LANGUAGES = {\r\n    ENGLISH: 'ENGLISH',\r\n    ARABIC: 'ARABIC'\r\n}","import { useRef, useEffect, useState } from 'react';\r\nimport { PerspectiveCamera } from '@react-three/drei';\r\nimport * as THREE from 'three';\r\nimport { PANO_SPHERE_SIZE } from './../../constants/app.constant';\r\n\r\nconst Camera = (props) => {\r\n    \r\n    const { pan = 0, tilt = 0, defaultZoom = 1, panoId } = props;\r\n    \r\n    const cameraRef = useRef();\r\n    const [position, setPosition] = useState([0, 0, 0]);\r\n    \r\n    const getPosition = (tilt, pan) => {\r\n        let parsedPan = parseFloat(pan);\r\n        let parsedTilt = parseFloat(tilt);\r\n        \r\n        let position = new THREE.Vector3(0, 0, 0);\r\n        if (parsedPan < 0) {\r\n            parsedPan = 360 + parsedPan;\r\n        }\r\n        position.setFromSphericalCoords(PANO_SPHERE_SIZE,\r\n            THREE.MathUtils.degToRad(90 - parsedTilt),\r\n            THREE.MathUtils.degToRad(- parsedPan)\r\n        );\r\n\r\n        return position;\r\n    };\r\n    \r\n    useEffect(() => {\r\n        if (!cameraRef.current) return;\r\n\r\n        const { x, y, z } = getPosition(tilt, pan);\r\n        setPosition([ x, y, z ]);\r\n\r\n        cameraRef.current.position.set(x, y, z).normalize().negate();\r\n        cameraRef.current.updateProjectionMatrix();\r\n        console.log('update camera ', {pan, tilt});\r\n\r\n    }, [pan, tilt, defaultZoom, panoId]);\r\n    \r\n    return (\r\n        <PerspectiveCamera \r\n            makeDefault \r\n            {...props} \r\n            fov={61} \r\n            ref={cameraRef} \r\n            // position={position}\r\n            // zoom={defaultZoom} \r\n        />\r\n    )\r\n};\r\n\r\nexport default Camera;","import { useEffect, useMemo } from 'react';\r\nimport { useLoader, useThree } from '@react-three/fiber';\r\nimport * as THREE from 'three';\r\nimport { PANO_SPHERE_SIZE } from './../../constants/app.constant';\r\n\r\nconst ImageSphere = (props) => {\r\n    const { url, addNewHotspot } = props;\r\n    \r\n    let texture = useLoader(THREE.TextureLoader, url);\r\n    \r\n    const { mouse } = useThree();\r\n    const { gl } = useThree();\r\n    \r\n    useEffect(() => void gl.setPixelRatio(window.devicePixelRatio || 2), [gl]);\r\n    \r\n    useMemo(() => {\r\n        texture.encoding = THREE.LinearEncoding;\r\n    }, [texture]);\r\n\r\n\r\n    const handleCanvasClick = (e) => {\r\n        console.log('img sphere clicked ', e, mouse)\r\n        addNewHotspot(e.point)\r\n    };\r\n\r\n\r\n    return (\r\n        <mesh {...props} scale={[-1, 1, 1]} onDoubleClick={handleCanvasClick}>\r\n            <sphereBufferGeometry attach=\"geometry\" args={[PANO_SPHERE_SIZE, 60, 40]} />\r\n            <meshBasicMaterial \r\n                attach=\"material\" \r\n                side={THREE.BackSide} \r\n                map={texture} \r\n                transparent={false} \r\n                fog={false}\r\n                color={0xffffff}\r\n                depthWrite={false} \r\n            />\r\n        </mesh>\r\n    );\r\n};\r\n\r\n\r\nexport default ImageSphere;","export const panosSelector = state => state.event.panos\r\n\r\nexport const getCurrentPanoSelector = state => state.event.panos[state.currentPanoIdx]\r\n\r\nexport const showHotspotConfigModalSelector = state => state.showHotspotConfigModal\r\n\r\nexport const getCurrentHotspotSelector = state => state.currentHotspot\r\n\r\nexport const appLanguageSelector = state => state.appLanguage\r\n\r\nexport const forceRTLSelector = state => state.forceRTL","export const HOTSPOT_TYPES = {\r\n    MOVE: \"MOVE\",\r\n    IFRAME: 'IFRAME',\r\n    URL: 'URL',\r\n    PATCHVIDEO3D: 'PATCHVIDEO3D',\r\n    PDF: 'PDF',\r\n}\r\n\r\nexport const HOTSPOT_INITIAL_STATE = {\r\n    id: Date.now(),\r\n    name: '',\r\n    hotspotIcon: '',\r\n    type: '',\r\n    position: {x: 0, y: 0, z: 0}\r\n}\r\n","export const addNewPanoSelector = state => state.addNewPano\r\n\r\nexport const setCurrentPanoSelector = state => state.setCurrentPano\r\n\r\nexport const updateCurrentPanoSelector = state => state.updateCurrentPano\r\n\r\nexport const addHotspotInCurrentPanoSelector = state => state.addHotspotInCurrentPano\r\n\r\nexport const setShowHotspotConfigModalSelector = state => state.setShowHotspotConfigModal\r\n\r\nexport const setCurrentHotspotSelector = state => state.setCurrentHotspot\r\n\r\nexport const updateCurrentHotspotSelector = state => state.updateCurrentHotspot\r\n\r\nexport const deleteCurrentHotspotSelector = state => state.deleteCurrentHotspot\r\n\r\nexport const setAppLanguageSelector = state => state.setAppLanguage\r\n\r\nexport const setAppForceRTLSelector = state => state.setAppForceRTL\r\n","import styles from './Hotspot.module.css';\r\nimport { Html } from '@react-three/drei';\r\n// import { BsExclamationTriangle } from \"react-icons/bs\"\r\nimport { setCurrentHotspotSelector, setShowHotspotConfigModalSelector } from './../../hooks/store/setters';\r\nimport { useAppStore } from './../../hooks/store/useAppStore';\r\nimport { MEDIA_BASE_URL } from '../../constants/app.constant';\r\nimport { forceRTLSelector } from '../../hooks/store/getters';\r\n\r\nconst DEFAULT_ICON = 'media/images/hotspot/info.gif'\r\n\r\n\r\nconst DefaultHotspot = (props) => {\r\n\r\n    const { index, hotspot, onClick=()=>{}, viewMode } = props;\r\n    const { position: { x, y, z } } = hotspot;\r\n\r\n    const setCurrentHotspot = useAppStore(setCurrentHotspotSelector);\r\n    const setShowHotspotConfigModal = useAppStore(setShowHotspotConfigModalSelector);\r\n    const forceRTL = useAppStore(forceRTLSelector);\r\n    \r\n    const handleHotspotClick = () => {\r\n        console.log('handleHotspotClick ', { viewMode });\r\n\r\n        if (viewMode) {\r\n            onClick();\r\n        } else {\r\n            editHotspot();\r\n        }\r\n    }\r\n\r\n    const editHotspot = () => {\r\n        console.log('editHotspot ', { hotspot, index })\r\n        setCurrentHotspot({ hotspot, index })\r\n        setShowHotspotConfigModal(true)\r\n    }\r\n\r\n    const translatedValue = (item, transKey, defaultKey) => {\r\n        if (forceRTL) {\r\n            if (item[transKey]) {\r\n                return item[transKey]\r\n            }\r\n            return item[defaultKey]\r\n        }\r\n        return item[defaultKey]\r\n    }\r\n\r\n    return (\r\n        <Html \r\n            {...props} \r\n            scaleFactor={1} \r\n            position={[x, y, z]} \r\n            center \r\n            zIndexRange={[9, 1]}\r\n            className={styles.hotspot}\r\n        >\r\n            { hotspot.name && \r\n                <div className={styles.hotspotTextContainer} onClick={handleHotspotClick}>\r\n                    <span className={styles.hotspotDisplayName}>\r\n                        { translatedValue(hotspot, 'nameArabic', 'name') }\r\n                    </span>\r\n                </div>\r\n            }\r\n            <div className={styles.hotspotImg}>\r\n                <img \r\n                    src={MEDIA_BASE_URL + (hotspot.hotspotIcon ? hotspot.hotspotIcon : DEFAULT_ICON)}\r\n                    alt=\"hotspot\" \r\n                    onClick={handleHotspotClick} \r\n                />\r\n            </div>\r\n        </Html>\r\n    );\r\n}\r\n\r\nexport default DefaultHotspot;","import { panosSelector } from '../../hooks/store/getters';\r\nimport { setCurrentPanoSelector } from '../../hooks/store/setters';\r\nimport { useAppStore } from '../../hooks/store/useAppStore';\r\nimport DefaultHotspot from './DefaultHotspot';\r\n\r\nconst MoveHotspot = ({ hotspot, index, viewMode }) => {\r\n\r\n    const setCurrentPano = useAppStore(setCurrentPanoSelector);\r\n    const panos = useAppStore(panosSelector);\r\n    \r\n    \r\n    const handleClick = () => {\r\n        // eslint-disable-next-line\r\n        const goToPano = panos.findIndex(p => p.id == hotspot.goToPano)\r\n        console.log('move hotspot goto pano', goToPano);\r\n        if (goToPano > -1) {\r\n            setCurrentPano(goToPano)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <DefaultHotspot hotspot={hotspot} viewMode={viewMode} index={index} onClick={handleClick} />\r\n    )\r\n}\r\n\r\nexport default MoveHotspot;","import styles from './PopupModal.module.css';\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { forceRTLSelector } from \"../../hooks/store/getters\";\r\nimport { useAppStore } from \"../../hooks/store/useAppStore\";\r\n\r\nconst PopupModal = ({ \r\n    show,\r\n    onHide,\r\n    size=\"lg\",\r\n    fullscreen=false,\r\n    title=\"\",\r\n    bodyPadding=true,\r\n    children=null,\r\n}) => {\r\n\r\n    const forceRTL = useAppStore(forceRTLSelector);\r\n    \r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size={size}\r\n            // fullscreen={fullscreen}\r\n            fullscreen=\"md-down\"\r\n            centered\r\n            dialogClassName={styles.modalDialog}\r\n        >\r\n            <Modal.Header closeButton className={`${styles.modalHeader} ${forceRTL ? styles.forceRTL : ''}`}>\r\n                <Modal.Title as=\"h6\">{ title }</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className={!bodyPadding ? 'p-0' : ''}>\r\n                { children }\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleModalClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleModalClose}>\r\n                    Save Changes\r\n                </Button>\r\n            </Modal.Footer> */}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default PopupModal;","import styles from './Hotspot.module.css';\r\nimport DefaultHotspot from './DefaultHotspot';\r\nimport { useState } from 'react';\r\nimport { Html } from \"@react-three/drei\";\r\nimport PopupModal from '../popup-modal/PopupModal';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useAppStore } from './../../hooks/store/useAppStore';\r\nimport { forceRTLSelector } from '../../hooks/store/getters';\r\n\r\nconst IframeHotspot = ({ hotspot, index, viewMode }) => {\r\n    \r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showItemModal, setShowItemModal] = useState(false);\r\n    const [item, setItem] = useState(null);\r\n    const forceRTL = useAppStore(forceRTLSelector);\r\n    \r\n    \r\n    const handleModalClose = () => {\r\n        setShowModal(false);\r\n    }\r\n    \r\n    const handleClick = () => {\r\n        const disableModal = hotspot.iframeDetails.find(d => d.disableModal)\r\n\r\n        if (disableModal) {\r\n            viewItem(disableModal)\r\n        } else {\r\n            setShowModal(true);\r\n        }\r\n    }\r\n\r\n    const viewItem = (item) => {\r\n        setItem(item);\r\n        setShowItemModal(true);\r\n    }\r\n\r\n    const handleItemModalClose = () => {\r\n        setShowItemModal(false);\r\n        setItem(null);\r\n    }\r\n\r\n    const handleIframeLoaded = () => {\r\n        console.log('iframe loaded');\r\n    }\r\n    \r\n    const translatedValue = (item, transKey, defaultKey) => {\r\n        if (forceRTL) {\r\n            if (item[transKey]) {\r\n                return item[transKey]\r\n            }\r\n            return item[defaultKey]\r\n        }\r\n        return item[defaultKey]\r\n    }\r\n    \r\n\r\n    \r\n    return (\r\n        <>\r\n            <DefaultHotspot\r\n                hotspot={hotspot} \r\n                viewMode={viewMode} \r\n                index={index} \r\n                onClick={handleClick} \r\n            />\r\n        \r\n            <Html>\r\n                <PopupModal \r\n                    show={showModal} \r\n                    onHide={handleModalClose} \r\n                    title={ translatedValue(hotspot, 'nameArabic', 'name') }\r\n                    size=\"md\"\r\n                >\r\n                    <ListGroup variant=\"flush\">\r\n                        {\r\n                            hotspot.iframeDetails?.map((data, idx) => (\r\n                                <ListGroup.Item key={idx}>\r\n                                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                                        <span className=\"text-break pe-3\">\r\n                                            { translatedValue(data, 'titleArabic', 'title') }\r\n                                        </span>\r\n                                        <Button variant=\"outline-primary\"\r\n                                            onClick={() => viewItem(data)}\r\n                                        >View</Button>\r\n                                    </div>\r\n                                </ListGroup.Item>\r\n                            ))\r\n                        }\r\n                    </ListGroup>\r\n                </PopupModal>\r\n\r\n                {showItemModal && item && <PopupModal \r\n                    show={showItemModal} \r\n                    onHide={handleItemModalClose} \r\n                    title={ translatedValue(item, 'titleArabic', 'title') }\r\n                    size=\"xl\"\r\n                    bodyPadding={false}\r\n                >\r\n                    <div className={styles.iframeWrapper}>\r\n                        <iframe\r\n                            src={item.url} \r\n                            title={ translatedValue(item, 'titleArabic', 'title') }\r\n                            onLoad={handleIframeLoaded}\r\n                        />\r\n                    </div>\r\n                </PopupModal>}\r\n            </Html>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IframeHotspot;","import DefaultHotspot from './DefaultHotspot';\r\nimport { useState } from 'react';\r\nimport { Html } from \"@react-three/drei\";\r\nimport PopupModal from '../popup-modal/PopupModal';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst UrlHotspot = ({ hotspot, index, viewMode }) => {\r\n    \r\n    const [showModal, setShowModal] = useState(false);\r\n    \r\n    const handleModalClose = () => {\r\n        setShowModal(false);\r\n    }\r\n    \r\n    const handleClick = () => {\r\n        setShowModal(true);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <DefaultHotspot\r\n                hotspot={hotspot} \r\n                viewMode={viewMode} \r\n                index={index} \r\n                onClick={handleClick} \r\n            />\r\n        \r\n            <Html>\r\n                <PopupModal \r\n                    show={showModal} \r\n                    onHide={handleModalClose} \r\n                    title={hotspot.name}\r\n                    size=\"md\"\r\n                >\r\n                    <ListGroup variant=\"flush\">\r\n                        {\r\n                            hotspot.urlDetails?.map((data, idx) => (\r\n                                <ListGroup.Item key={idx}>\r\n                                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                                        <span className=\"text-break pe-3\">{ data.title }</span>\r\n                                        <Button variant=\"outline-primary\">View</Button>\r\n                                    </div>\r\n                                </ListGroup.Item>\r\n                            ))\r\n                        }\r\n                    </ListGroup>\r\n                </PopupModal>\r\n            </Html>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UrlHotspot;","import React, { useRef, useEffect, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { Billboard, Box, Plane } from '@react-three/drei';\r\nimport { useAppStore } from '../../hooks/store/useAppStore';\r\nimport { setCurrentHotspotSelector, setShowHotspotConfigModalSelector } from '../../hooks/store/setters';\r\nimport DefaultHotspot from './DefaultHotspot';\r\nimport { useLoader, useFrame } from '@react-three/fiber';\r\n// import { useLoader, useFrame } from 'react-three-fiber';\r\nimport { Html } from '@react-three/drei';\r\n\r\nconst getPosition = (tilt, pan) => {\r\n    var position = new THREE.Vector3(0, 0, 0);\r\n    console.log(tilt, pan);\r\n    if (pan < 0) {\r\n        pan = 360 + pan;\r\n    }\r\n    position.setFromSphericalCoords(900,\r\n        THREE.MathUtils.degToRad(90 - tilt),\r\n        THREE.MathUtils.degToRad(- pan));\r\n\r\n    console.log('get position :: ', position)\r\n\r\n    return position;\r\n};\r\n\r\n// http://stemkoski.github.io/Three.js/Video.html\r\n\r\n\r\nconst PatchVideo3D = ({ hotspot, index, viewMode }) => {\r\n    // const { patchSource, patchHeight, patchWidth, tilt, pan } = hotspot;\r\n    const {  patchVideo3D, position } = hotspot;\r\n    const { x, y, z } = position;\r\n    const { patchSource, patchHeight, patchWidth } = patchVideo3D;\r\n\r\n    const setCurrentHotspot = useAppStore(setCurrentHotspotSelector);\r\n    const setShowHotspotConfigModal = useAppStore(setShowHotspotConfigModalSelector);\r\n\r\n    const [texture, setTexture] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    \r\n    const billboard = useRef();\r\n    const [showVideo, setShowVideo] = useState(false);\r\n\r\n    // useFrame((props) => {\r\n    //     console.log('billboard frmae props', props, billboard);\r\n    // })\r\n\r\n  \r\n    useEffect(() => {\r\n            \r\n            \r\n        const removeVideo = () => {\r\n            const video = document.querySelector('video');\r\n\r\n            if (video) {\r\n                document.body.removeChild(video);\r\n            }\r\n        }\r\n\r\n        const initVideo = () => {\r\n            console.log('calling init video');\r\n            \r\n            var video = document.createElement('video');\r\n\r\n            // video.src = patchSource;\r\n            video.src = \"https://s3-us-east-2.amazonaws.com/ve-dev/a6a8a521-11a4-44dd-96cf-7308bb9d8a34.m4v\";\r\n            video.autoplay = true;\r\n            video.crossOrigin = \"anonymous\";\r\n            video.playsinline = true;\r\n            video.loop = true;\r\n            // video.style = \"display:none\";\r\n            video.muted = true;\r\n            \r\n\r\n            // document.body.appendChild(video);\r\n            // var texture2 = useLoader(THREE.VideoTexture, video);\r\n\r\n            video.addEventListener('loadeddata', function(params) {\r\n                console.log('billboard video onload', {params, hotspot});\r\n                \r\n                document.body.appendChild(video);\r\n            \r\n                video.play();\r\n                var texture1 = new THREE.VideoTexture(video);\r\n                \r\n                // var texture2 = useLoader(THREE.VideoTexture, video);\r\n                console.log('billboard texture', texture1);\r\n            \r\n                setTexture(texture1);\r\n                setTimeout(() => {\r\n                    setShow(true);\r\n                    setShowVideo(true)\r\n                }, 1500);\r\n            })\r\n        }\r\n\r\n        \r\n        if(patchSource) {\r\n            console.log('patch source init ', patchSource);\r\n            \r\n            // initVideo();\r\n            \r\n            const vid = document.getElementById('video');\r\n            console.log('new vid :::::::: ', vid);\r\n            \r\n            var texture1 = new THREE.VideoTexture(vid);\r\n            \r\n            // var texture2 = useLoader(THREE.VideoTexture, video);\r\n            console.log('billboard texture', texture1);\r\n        \r\n            setTexture(texture1);\r\n            setTimeout(() => {\r\n                setShow(true);\r\n                setShowVideo(true)\r\n            }, 1500);\r\n        }\r\n\r\n        return () => removeVideo();\r\n\r\n    }, [patchSource]);\r\n\r\n    // const removeVideo = () => {\r\n    //     const video = document.querySelector('video');\r\n\r\n    //     if (video) {\r\n    //         document.body.removeChild(video);\r\n    //     }\r\n    // }\r\n\r\n    // const initVideo = () => {\r\n    //     console.log('calling init video');\r\n        \r\n    //     var video = document.createElement('video');\r\n\r\n    //     video.src = patchSource;\r\n    //     // video.src = \"https://s3-us-east-2.amazonaws.com/ve-dev/b041a17e-e7cc-402e-bf64-7a44ce78ba12.m4v\";\r\n    //     video.autoplay = true;\r\n    //     video.crossOrigin = \"anonymous\";\r\n    //     video.playsinline = true;\r\n    //     video.loop = true;\r\n    //     // video.style = \"display:none\";\r\n    //     video.muted = true;\r\n        \r\n\r\n    //     // document.body.appendChild(video);\r\n    //     // var texture2 = useLoader(THREE.VideoTexture, video);\r\n\r\n    //     video.addEventListener('loadeddata', function(params) {\r\n    //         console.log('billboard video onload', {params, hotspot});\r\n            \r\n    //         document.body.appendChild(video);\r\n        \r\n    //         video.play();\r\n    //         var texture1 = new THREE.VideoTexture(video);\r\n            \r\n    //         // var texture2 = useLoader(THREE.VideoTexture, video);\r\n    //         console.log('billboard texture', texture1);\r\n        \r\n    //         setTexture(texture1);\r\n    //         setTimeout(() => {\r\n    //             setShow(true);\r\n    //             setShowVideo(true)\r\n    //         }, 1500);\r\n    //     })\r\n    // }\r\n\r\n    \r\n    // const handleHotspotClick = () => {\r\n    //     console.log('handleHotspotClick ', { viewMode });\r\n\r\n    //     if (!viewMode) {\r\n    //         setCurrentHotspot({ hotspot, index })\r\n    //         setShowHotspotConfigModal(true)\r\n    //     } else {\r\n    //         initVideo();\r\n    //         // setShowVideo(true)\r\n    //     }\r\n    // }\r\n    \r\n    const pos = getPosition(-40.15, 93.35);\r\n    // const pos = getPosition(3, 30);\r\n    // if (!texture) return null\r\n  \r\n    // if (!show) return null;\r\n  \r\n    return (\r\n        <>\r\n        <Html\r\n            scaleFactor={1} \r\n            position={[x, y, z]} \r\n            center \r\n            zIndexRange={[9, 1]}\r\n        >\r\n            <video id=\"video\"\r\n                playsInline\r\n                webkit-playsinline=\"true\"\r\n                muted\r\n                loop\r\n                autoPlay\r\n                width={300}\r\n                height={300}\r\n                // width={parseFloat(patchWidth)}\r\n                // height={parseFloat(patchHeight)}\r\n                // src=\"https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4\"\r\n                // src={patchSource}\r\n                // style={{ display: 'none' }}\r\n            >\r\n                \r\n                <source src=\"http://techslides.com/demos/sample-videos/small.webm\" type=\"video/webm\" /> \r\n                <source src=\"http://techslides.com/demos/sample-videos/small.ogv\" type=\"video/ogg\" /> \r\n                <source src=\"http://techslides.com/demos/sample-videos/small.mp4\" type=\"video/mp4\" />\r\n                <source src=\"http://techslides.com/demos/sample-videos/small.3gp\" type=\"video/3gp\" />\r\n\r\n            </video>\r\n        </Html>\r\n        \r\n        {/* <Plane args={[10,5]} material-color=\"red\"  > */}\r\n        {/* <Plane args={[10,5]} attach=\"material\" material={texture}>\r\n        </Plane> */}\r\n\r\n        { show && <Billboard ref={billboard} \r\n            // follow={true}\r\n            // position={[x, y, z]} \r\n            // position={pos} \r\n            // position={[pos.x, pos.y, pos.z]} \r\n            // position={[0,0,0]} \r\n            // args={[parseFloat(patchWidth), parseFloat(patchHeight)]}\r\n            args={[916.4, 1083]}\r\n            // args={[patchHeight, patchWidth]}\r\n            // onClick={handleHotspotClick}\r\n            follow={true} // Follow the camera (default=true)\r\n            lockX={false} // Lock the rotation on the x axis (default=false)\r\n            lockY={false} // Lock the rotation on the y axis (default=false)\r\n            lockZ={false} // Lock the rotation on the z axis (default=false)\r\n\r\n        >\r\n            {/* <Plane args={[10,5]} material-color=\"red\"  /> */}\r\n            <meshBasicMaterial attach=\"material\" map={texture} side={THREE.DoubleSide} />\r\n        </Billboard>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PatchVideo3D;","import SimpleBarReact from \"simplebar-react\";\r\n\r\nconst ScrollContent = (props) => {\r\n\r\n    const { children, ...defaultProps } = props;\r\n\r\n    return (\r\n        <SimpleBarReact {...defaultProps} >\r\n            { children }\r\n        </SimpleBarReact>\r\n    )\r\n}\r\n\r\nexport default ScrollContent;","import styles from './PDFViewer.module.css';\r\nimport { useState } from 'react';\r\nimport { Document, Page, Outline, pdfjs } from \"react-pdf\";\r\nimport { MdChevronLeft, MdChevronRight, MdZoomIn, MdZoomOut } from \"react-icons/md\";\r\nimport ScrollContent from './../scroll-content/ScrollContent';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\n\r\nconst PDFViewer = ({ src, pdfWidth }) => {\r\n\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [loadingDoc, setLoadingDoc] = useState(true);\r\n  const [scaleNo, setScaleNo] = useState(1.0);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n    setLoadingDoc(false);\r\n  }\r\n\r\n  function changePage(offset) {\r\n    setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n  }\r\n\r\n  function previousPage() {\r\n    if (!(pageNumber <= 1)) {\r\n      changePage(-1)\r\n      document.getElementById(`page-${pageNumber}`).scrollIntoView();\r\n    }\r\n  }\r\n\r\n  function nextPage() {\r\n    if (!(pageNumber >= numPages)) {\r\n      changePage(1)\r\n      document.getElementById(`page-${pageNumber}`).scrollIntoView();\r\n    }\r\n  }\r\n\r\n  function onItemClick({ pageNumber }) {\r\n    setPageNumber(pageNumber);\r\n  }\r\n\r\n  function scalePdf(type) {\r\n    if (type == \"zoomIn\" && !(scaleNo>=1.0 || loadingDoc)) {\r\n      setScaleNo((prev) => prev+0.2)\r\n    }\r\n    if (type == \"zoomOut\" && !(scaleNo<=0.4 || loadingDoc)) {\r\n      setScaleNo((prev) => prev-0.2)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav className={styles.pdfNavbar}>\r\n        <MdChevronLeft color=\"primary\" \r\n            className={`${pageNumber <= 1 || loadingDoc ? styles.pdfnavDisabled : styles.pdfNav}`}\r\n            disabled={pageNumber <= 1 || loadingDoc} onClick={previousPage} \r\n        /> \r\n        <span>\r\n            {pageNumber} / {numPages}\r\n        </span>\r\n        <MdChevronRight color=\"primary\" \r\n            className={`${pageNumber >= numPages || loadingDoc ? styles.pdfnavDisabled : styles.pdfNav}`}\r\n            disabled={pageNumber >= numPages || loadingDoc} onClick={nextPage} \r\n        />\r\n        <MdZoomIn color=\"primary\" \r\n            className={`${scaleNo>=1.0 || loadingDoc ? styles.pdfnavDisabled : styles.pdfNav}`} \r\n            disabled={scaleNo>=1.0 || loadingDoc} onClick={() => scalePdf(\"zoomIn\")} \r\n        />\r\n        <MdZoomOut color=\"primary\" \r\n            className={`${scaleNo<=0.4 || loadingDoc ? styles.pdfnavDisabled : styles.pdfNav}`} \r\n            disabled={scaleNo<=0.4 || loadingDoc} onClick={() => scalePdf(\"zoomOut\")} \r\n        />\r\n      </nav>\r\n      \r\n      <div className={styles.pdfWrapper}>\r\n        {loadingDoc && (\r\n          <div className=\"pdf-loader-conatiner\">\r\n            <div className=\"pdf-loader\"></div>\r\n          </div>\r\n        )}\r\n        \r\n        \r\n        <ScrollContent className={styles.pdfContentWrapper}>\r\n            <Document file={src} onLoadSuccess={onDocumentLoadSuccess} loading={\"\"}>\r\n                {\r\n                    Array.apply(null, {length: numPages}).map((val, index) => {\r\n                        return index + 1;\r\n                    }).map((pages, i) => (\r\n                        <div id={`page-${pages}`} key={i}>\r\n                            <Page\r\n                                scale={scaleNo}\r\n                                className={styles.pageWrapper}\r\n                                loading={\"\"}\r\n                                width={pdfWidth}\r\n                                renderAnnotationLayer={false}\r\n                                renderTextLayer={false}\r\n                                pageNumber={pages}\r\n                            />\r\n                            {/* <div>\r\n                                <p>\r\n                                    Page {pages || (numPages ? 1 : '--')} of {numPages || '--'}\r\n                                </p>\r\n                            </div> */}\r\n                        </div>\r\n                    ))\r\n                }\r\n            </Document>\r\n        </ScrollContent>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default PDFViewer;","import styles from './Hotspot.module.css';\r\nimport DefaultHotspot from './DefaultHotspot';\r\nimport { useCallback, useState, useRef, useEffect } from 'react';\r\nimport { Html } from \"@react-three/drei\";\r\nimport PopupModal from '../popup-modal/PopupModal';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useAppStore } from './../../hooks/store/useAppStore';\r\nimport { forceRTLSelector } from '../../hooks/store/getters';\r\nimport PDFViewer from './../pdf-viewer/PDFViewer';\r\nimport { MEDIA_BASE_URL } from '../../constants/app.constant';\r\n\r\nconst PDFHotspot = ({ hotspot, index, viewMode }) => {\r\n    \r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showItemModal, setShowItemModal] = useState(false);\r\n    const [item, setItem] = useState(null);\r\n    const forceRTL = useAppStore(forceRTLSelector);\r\n    const [pdfWidth, setPdfWidth] = useState(null);\r\n    \r\n    const pdfViewerRef = useRef();\r\n    \r\n    useEffect(() => {\r\n        \r\n        if (pdfViewerRef && pdfViewerRef.current) {\r\n            const width = pdfViewerRef.current.getBoundingClientRect().width\r\n            console.log('pdfviewer ref width ', width);\r\n            setPdfWidth(width);\r\n        }\r\n        \r\n    }, [showItemModal, pdfViewerRef])\r\n    \r\n    \r\n    const handleModalClose = () => {\r\n        setShowModal(false);\r\n    }\r\n    \r\n    const handleClick = () => {\r\n        const disableModal = hotspot.pdfDetails.find(d => d.disableModal)\r\n\r\n        if (disableModal) {\r\n            viewItem(disableModal)\r\n        } else {\r\n            setShowModal(true);\r\n        }\r\n    }\r\n\r\n    const viewItem = (item) => {\r\n        setItem(item);\r\n        setShowItemModal(true);\r\n    }\r\n\r\n    const handleItemModalClose = () => {\r\n        setShowItemModal(false);\r\n        setItem(null);\r\n    }\r\n    \r\n    const translatedValue = (item, transKey, defaultKey) => {\r\n        if (forceRTL) {\r\n            if (item[transKey]) {\r\n                return item[transKey]\r\n            }\r\n            return item[defaultKey]\r\n        }\r\n        return item[defaultKey]\r\n    }\r\n    \r\n\r\n    \r\n    return (\r\n        <>\r\n            <DefaultHotspot\r\n                hotspot={hotspot} \r\n                viewMode={viewMode} \r\n                index={index} \r\n                onClick={handleClick} \r\n            />\r\n        \r\n            <Html>\r\n                <PopupModal \r\n                    show={showModal} \r\n                    onHide={handleModalClose} \r\n                    title={ translatedValue(hotspot, 'nameArabic', 'name') }\r\n                    size=\"md\"\r\n                >\r\n                    <ListGroup variant=\"flush\">\r\n                        {\r\n                            hotspot.pdfDetails?.map((data, idx) => (\r\n                                <ListGroup.Item key={idx}>\r\n                                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                                        <span className=\"text-break pe-3\">\r\n                                            { translatedValue(data, 'titleArabic', 'title') }\r\n                                        </span>\r\n                                        <Button variant=\"outline-primary\"\r\n                                            onClick={() => viewItem(data)}\r\n                                        >View</Button>\r\n                                    </div>\r\n                                </ListGroup.Item>\r\n                            ))\r\n                        }\r\n                    </ListGroup>\r\n                </PopupModal>\r\n\r\n                {showItemModal && item && <PopupModal \r\n                    show={showItemModal} \r\n                    onHide={handleItemModalClose} \r\n                    title={ translatedValue(item, 'titleArabic', 'title') }\r\n                    size=\"xl\"\r\n                    bodyPadding={false}\r\n                >\r\n                    <div className={styles.iframeWrapper} ref={pdfViewerRef}>\r\n                        { pdfWidth && <PDFViewer\r\n                            src={MEDIA_BASE_URL + item.url} \r\n                            pdfWidth={pdfWidth}\r\n                        />}\r\n                    </div>\r\n                </PopupModal>}\r\n            </Html>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PDFHotspot;","import { HOTSPOT_TYPES } from '../../constants/hotspot.constant';\r\nimport DefaultHotspot from './DefaultHotspot';\r\nimport MoveHotspot from './MoveHotspot';\r\nimport IframeHotspot from './IframeHotspot';\r\nimport UrlHotspot from './UrlHotspot';\r\nimport PatchVideo3D from './PatchVideo3D';\r\nimport PDFHotspot from './PDFHotspot';\r\n\r\nconst Hotspot = (props) => {\r\n    \r\n    const { hotspot } = props;\r\n\r\n    switch (hotspot.type) {\r\n        case HOTSPOT_TYPES.MOVE:\r\n            return <MoveHotspot {...props} />\r\n        \r\n        case HOTSPOT_TYPES.IFRAME:\r\n            return <IframeHotspot {...props} />\r\n        \r\n        case HOTSPOT_TYPES.URL:\r\n            return <UrlHotspot {...props} />\r\n        \r\n        case HOTSPOT_TYPES.PATCHVIDEO3D:\r\n            return <PatchVideo3D {...props} />\r\n        \r\n        case HOTSPOT_TYPES.PDF:\r\n            return <PDFHotspot {...props} />\r\n        \r\n        default:\r\n            return <DefaultHotspot {...props} />\r\n    }\r\n    \r\n};\r\n\r\nexport default Hotspot;","import Hotspot from './../../components/hotspots/Hotspot';\r\n\r\nconst PanoHotspots = ({ hotspots, viewMode=false }) => {\r\n    \r\n    if (!hotspots) return null;\r\n  \r\n    return (\r\n        <>\r\n            { \r\n                hotspots.map((hp, index) => <Hotspot key={index} \r\n                    index={index} hotspot={hp} viewMode={viewMode} />\r\n                )\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default PanoHotspots;","import styles from \"./Panorama.module.css\";\r\nimport React, { Suspense, useRef } from 'react';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { Loader, OrbitControls } from '@react-three/drei';\r\nimport Camera from './Camera';\r\nimport ImageSphere from './ImageSphere';\r\nimport { useAppStore } from './../../hooks/store/useAppStore';\r\nimport { MEDIA_BASE_URL } from \"../../constants/app.constant\";\r\nimport { getCurrentPanoSelector } from \"../../hooks/store/getters\";\r\nimport PanoHotspots from './PanoHotspots';\r\nimport { addHotspotInCurrentPanoSelector } from \"../../hooks/store/setters\";\r\nimport { HOTSPOT_INITIAL_STATE } from \"../../constants/hotspot.constant\";\r\nimport PatchVideo3D from \"../../components/hotspots/PatchVideo3D\";\r\n\r\nconst Panorama = ({ viewMode=false }) => {\r\n    \r\n    const currentPano = useAppStore(getCurrentPanoSelector);\r\n    const addHotspotInCurrentPano = useAppStore(addHotspotInCurrentPanoSelector);\r\n\r\n    const group = useRef(null);\r\n    \r\n    const addNewHotspot = ({x, y, z}) => {\r\n        if (viewMode) return;\r\n        \r\n        console.log('add new hotspot ', {x,y,z});\r\n        addHotspotInCurrentPano({\r\n            ...HOTSPOT_INITIAL_STATE,\r\n            id: Date.now(),\r\n            position: { x, y, z }\r\n        })\r\n    };\r\n    \r\n    if (!currentPano) return null;\r\n    \r\n    const { image, pan, tilt, cameraFree, hotspots, id } = currentPano;\r\n    // const { image, pan, tilt, cameraFree, zoom, id, hotspots } = currentPano;\r\n    \r\n    return (\r\n        <>\r\n            <Canvas className={styles.canvasWrapper}\r\n                gl={{ alpha: false }} \r\n                colorManagement={false} \r\n            >\r\n                <Suspense fallback={null}>\r\n                    {/* <ambientLight /> */}\r\n\r\n                    <Camera\r\n                        position={[0, 0, -0.1]} \r\n                        pan={pan} \r\n                        tilt={tilt} \r\n                        panoId={id}\r\n                        // defaultZoom={zoom} \r\n                    />\r\n                    \r\n                    <OrbitControls \r\n                        enableKeys={true} \r\n                        rotateSpeed={-1} \r\n                        enableZoom={!!cameraFree} \r\n                        enablePan={false} \r\n                        dampingFactor={0.1} \r\n                        enabled={!!cameraFree} \r\n                        minDistance={5} \r\n                        maxDistance={950} \r\n                    />\r\n                    \r\n                    \r\n                    <group ref={group}>\r\n                        <ImageSphere\r\n                            url={MEDIA_BASE_URL + image} \r\n                            // url=\"https://s3-us-east-2.amazonaws.com/ve-dev/2bacb2e7-3b76-480f-b0d1-57af57756462.jpg\" \r\n                            position={[0, 0, 0]} \r\n                            key={image} \r\n                            addNewHotspot={addNewHotspot}\r\n                        />\r\n                        <PanoHotspots hotspots={hotspots} viewMode={viewMode} />\r\n                        {/* <HotspotModal /> */}\r\n                    </group>\r\n                    {/* <PatchVideo3D \r\n                        hotspot={{\r\n                            \"id\": 1631014444476,\r\n                            \"name\": \"patch\",\r\n                            \"type\": \"PATCHVIDEO3D\",\r\n                            \"position\": {\r\n                                \"x\": -826.8792682917745,\r\n                                \"y\": -486.51027138602586,\r\n                                \"z\": 278.0386724248006\r\n                            },\r\n                            \"patchVideo3D\": {\r\n                                \"patchSource\": \"https://s3-us-east-2.amazonaws.com/ve-dev/a6a8a521-11a4-44dd-96cf-7308bb9d8a34.m4v\",\r\n                                \"patchWidth\": \"916.4\",\r\n                                \"patchHeight\": \"1083\"\r\n                            }\r\n                        }}\r\n                        viewMode={true}\r\n                        index={10}\r\n                    /> */}\r\n                </Suspense>\r\n            </Canvas>\r\n            <Loader />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Panorama;","import { MEDIA_BASE_URL } from '../../constants/app.constant';\r\nimport styles from './Logo.module.css';\r\n\r\nconst Logo = () => {\r\n    \r\n    return (\r\n        <div className={styles.logo}>\r\n            {/* <img src={MEDIA_BASE_URL + 'media/images/logo/logo-360.png'} alt=\"logo\"/> */}\r\n            <img src={MEDIA_BASE_URL + 'media/images/logo/roshn-logo.jpg'} alt=\"roshn-logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import styles from './PanoNavMenu.module.css';\r\nimport { useAppStore } from './../../hooks/store/useAppStore';\r\nimport { forceRTLSelector, panosSelector } from './../../hooks/store/getters';\r\nimport { setCurrentPanoSelector } from '../../hooks/store/setters';\r\n\r\nconst PanoNavMenu = () => {\r\n    \r\n    const panos = useAppStore(panosSelector);\r\n    const setCurrentPano = useAppStore(setCurrentPanoSelector)\r\n    const forceRTL = useAppStore(forceRTLSelector);\r\n    \r\n    const translatedValue = (item, transKey, defaultKey) => {\r\n        if (forceRTL) {\r\n            if (item[transKey]) {\r\n                return item[transKey]\r\n            }\r\n            return item[defaultKey]\r\n        }\r\n        return item[defaultKey]\r\n    }\r\n    \r\n    return (\r\n        <div className={`${styles.panoNav} ${forceRTL ? styles.forceRTL : ''}`}>\r\n            {\r\n                panos.map((p, i) => <div className={styles.navMenuItem}\r\n                    key={i}\r\n                    onClick={() => setCurrentPano(i)}\r\n                >\r\n                    { translatedValue(p, 'nameArabic', 'name') }\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PanoNavMenu;","import styles from './UserMenu.module.css';\r\nimport { MdLanguage, MdVolumeUp } from \"react-icons/md\";\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { LANGUAGES } from '../../constants/app.constant';\r\nimport { useAppStore } from '../../hooks/store/useAppStore';\r\nimport { setAppForceRTLSelector, setAppLanguageSelector } from '../../hooks/store/setters';\r\nimport { forceRTLSelector } from '../../hooks/store/getters';\r\n// import { MdLanguage, MdVolumeUp, MdVolumeOff } from \"react-icons/md\";\r\n\r\nconst languageOptions = Object.values(LANGUAGES); //.map(l => ({ label: l, value: l }))\r\n\r\nconst UserMenu = () => {\r\n\r\n    const setAppLanguage = useAppStore(setAppLanguageSelector);\r\n    const setAppForceRTL = useAppStore(setAppForceRTLSelector);\r\n    const forceRTL = useAppStore(forceRTLSelector);\r\n\r\n    const handleLanguageChange = (lang) => {\r\n        console.log('lang changed', lang)\r\n        setAppLanguage(lang)\r\n\r\n        if (lang === LANGUAGES.ARABIC) {\r\n            setAppForceRTL(true)\r\n        } else {\r\n            setAppForceRTL(false)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className={`${styles.userMenu} ${forceRTL ? styles.forceRTL : ''}`}>\r\n            <div className={styles.userMenuItem}>\r\n                <MdVolumeUp />\r\n            </div>\r\n            \r\n            <div className={styles.userMenuItem}>\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"plain\" className={styles.langSelectorBtn}>\r\n                        <MdLanguage />\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        {\r\n                            languageOptions.map(lang => (\r\n                                <Dropdown.Item key={lang} onClick={() => handleLanguageChange(lang)}>\r\n                                    { lang }\r\n                                </Dropdown.Item>\r\n                            ))\r\n                        }\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserMenu;","import styles from './Header.module.css';\r\nimport Logo from '../logo/Logo';\r\nimport PanoNavMenu from './../pano-nav-menu/PanoNavMenu';\r\nimport UserMenu from '../user-menu/UserMenu';\r\nimport { forceRTLSelector } from '../../hooks/store/getters';\r\nimport { useAppStore } from '../../hooks/store/useAppStore';\r\n\r\nconst Header = () => {\r\n\r\n    const forceRTL = useAppStore(forceRTLSelector);\r\n    \r\n    return (\r\n        <div className={`${styles.appHeader} ${forceRTL ? styles.forceRTL : ''}`}>\r\n            <Logo />\r\n            \r\n            <PanoNavMenu />\r\n            \r\n            <UserMenu />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import { Button } from 'react-bootstrap';\r\nimport styles from './WelcomeVideo.module.css';\r\n\r\nconst WelcomeVideo = ({ onVideoEnded }) => {\r\n\r\n    const onDone = () => {\r\n        console.log('video ended');\r\n        onVideoEnded();\r\n    }\r\n\r\n    const onSkip = () => {\r\n        console.log('video skipped');\r\n        onVideoEnded();\r\n    }\r\n\r\n    const onStart = () => {\r\n        console.log('video start');\r\n    }\r\n\r\n    return (\r\n        <div className={styles.welcomeVideoWrapper}>\r\n            <video \r\n                className={styles.welcomeVideo}\r\n                src=\"https://www.roshn.sa/-/media/project/roshn/banner/banner-videos/roshn-mv-final-ar_01.mp4\"\r\n                autoPlay={true}\r\n                playsInline={true}\r\n                controls={false}\r\n                muted={false}\r\n                onEnded={onDone}\r\n                onPlay={onStart}\r\n            ></video>\r\n\r\n            <Button\r\n                variant=\"outline-light\"\r\n                className={styles.skipBtn}\r\n                onClick={onSkip}\r\n            >Skip</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WelcomeVideo;","import { Button } from \"react-bootstrap\"\r\nimport styles from './LoadingScreen.module.css';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\n\r\nconst LoadingScreen = ({ show, startYourExperience, percentage=0 }) => {\r\n    \r\n    if (!show) return null;\r\n\r\n    return (\r\n        <div className={styles.loadingScreenWrapper}>\r\n            <div>\r\n\r\n                {\r\n                    percentage < 100 \r\n                    ? <>\r\n                        <h6>Loading... {percentage}% </h6>\r\n                        <ProgressBar animated now={percentage} />\r\n                    </>\r\n                    : <Button\r\n                        size=\"lg\"\r\n                        variant=\"warning\"\r\n                        onClick={startYourExperience}\r\n                        className=\"text-uppercase\"\r\n                    >Start Your Experience</Button>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingScreen;","import { useProgress, useTexture } from \"@react-three/drei\";\r\nimport { Suspense } from \"react\";\r\nimport { MEDIA_BASE_URL } from \"../../constants/app.constant\";\r\nimport { panosSelector } from \"../../hooks/store/getters\";\r\nimport { useAppStore } from \"../../hooks/store/useAppStore\";\r\n\r\nconst PreloadPanos = () => {\r\n\r\n    const panos = useAppStore(panosSelector)\r\n\r\n    const panoImageUrls = panos.map(p => MEDIA_BASE_URL + p.image)\r\n\r\n    const textures = useTexture(panoImageUrls)\r\n\r\n    const Loader = () => {\r\n        const { active, progress, errors, item, loaded, total } = useProgress()\r\n\r\n        console.log('loader useProgress ', progress, total);\r\n        return <div>{progress} % loaded</div>\r\n    }\r\n\r\n\r\n    return (\r\n        <Suspense fallback={Loader}>\r\n            { textures.map(t => null) }\r\n        </Suspense>\r\n    )\r\n}\r\n\r\nexport default PreloadPanos;","import Panorama from './../panorama/Panorama';\r\nimport Header from './../../components/header/Header';\r\nimport WelcomeVideo from '../../components/welcome-video/WelcomeVideo';\r\nimport { useEffect, useState } from 'react';\r\nimport LoadingScreen from '../../components/loading-screen/LoadingScreen';\r\nimport PreloadPanos from '../../components/preload/PreloadPanos';\r\nimport { Suspense } from 'react';\r\nimport { useProgress } from '@react-three/drei';\r\n\r\n\r\nconst Event = () => {\r\n\r\n    const [showLoader, setShowLoader] = useState(true);\r\n    const [showWelcomeVideo, setShowWelcomeVideo] = useState(false);\r\n    const [showPanorama, setShowPanorama] = useState(false);\r\n\r\n    const [loadPercentValue, setLoadPercentValue] = useState(0);\r\n\r\n    const onWelcomeVideoEnded = () => {\r\n        console.log('welcome video ended. Starting panorama');\r\n        setShowPanorama(true);\r\n        setShowWelcomeVideo(false);\r\n    }\r\n\r\n    const startYourExperience = () => {\r\n        setShowWelcomeVideo(true);\r\n        setShowLoader(false);\r\n    }\r\n\r\n    const Loader = () => {\r\n        console.log('Loader called');\r\n        const { active, progress, errors, item, loaded, total } = useProgress()\r\n        // const progress = useProgress();\r\n        \r\n        useEffect(() => {\r\n            console.log('loader useProgress ', progress);\r\n            setLoadPercentValue(progress)\r\n        }, [progress])\r\n\r\n        return null;\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n            {\r\n                showLoader && <LoadingScreen \r\n                    show={showLoader} \r\n                    startYourExperience={startYourExperience}\r\n                    percentage={loadPercentValue}\r\n                />\r\n            }\r\n\r\n            <Header />\r\n\r\n            <Suspense fallback={<Loader />}>\r\n                <PreloadPanos />\r\n            </Suspense>\r\n\r\n            { showPanorama && <Panorama viewMode={true} /> }\r\n\r\n            { showWelcomeVideo && <WelcomeVideo onVideoEnded={onWelcomeVideoEnded} /> }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Event;","import styles from './OffCanvasModal.module.css';\r\nimport { MdClose } from \"react-icons/md\";\r\nimport ScrollContent from '../scroll-content/ScrollContent';\r\n\r\nconst OffCanvasModal = ({ show, onClose, title, children, footer }) => {\r\n    \r\n    if (!show) return null;\r\n    \r\n    return (\r\n        <>\r\n            <div className={styles.offCanvasModalContainer}>\r\n                <div className={styles.modalHeader}>\r\n                    <div className={styles.modalTitle}>\r\n                        <h5>{ title }</h5>\r\n                    </div>\r\n                    <div className={styles.modalCloseBtn} onClick={onClose}>\r\n                        <MdClose />\r\n                    </div>\r\n                </div>\r\n                \r\n                <ScrollContent className={styles.modalBody}>\r\n                    {/* { new Array(1000).fill('fsdfsd dad').join(' ') } */}\r\n                    { children }\r\n                </ScrollContent>\r\n                \r\n                <div className={styles.modalFooter}>\r\n                    { footer }\r\n                </div>\r\n            </div>\r\n            <div className={styles.offCanvasModalBackdrop} onClick={onClose}></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OffCanvasModal;","import styles from './Input.module.css';\r\n\r\n\r\nconst InputElement = props => {\r\n    const { type='text' } = props;\r\n    \r\n    switch (type) {\r\n        case 'text':\r\n            return <input type=\"text\" className={styles.input} {...props} />;\r\n\r\n        case 'textarea':\r\n            return <textarea className={styles.textarea} {...props} ></textarea>;\r\n\r\n        case 'file':\r\n            return <input type=\"file\" {...props} />\r\n\r\n        case 'select':\r\n            return <select className={styles.select} {...props}>\r\n                <option value=\"\">Select...</option>\r\n                {\r\n                    props.options.map((o, i) => (\r\n                        <option key={i} value={o.value}>{o.label}</option>\r\n                    ))\r\n                }\r\n            </select>;\r\n    \r\n        default:\r\n            return <input type=\"text\" className={styles.input} {...props} />;\r\n    }\r\n}\r\n\r\n\r\nexport const FormError = ({ error }) => {\r\n    \r\n    if (!error) return null;\r\n    \r\n    return <span className={styles.error}>{ error }</span>\r\n}\r\n\r\n\r\nconst Input = (props) => {\r\n    \r\n    const { label, variant=\"\", error=\"\" } = props;\r\n    \r\n    return (\r\n        <div className={`${styles.formGroup} ${styles[variant]}`}>\r\n            { label && <label className={styles.label}>{ label }</label> }\r\n            <InputElement {...props} />\r\n            <FormError error={error} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;","import styles from './AppButton.module.css';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst AppButton = (props) => {\r\n    \r\n    const { label=\"\", fullWidth=false, ...defaultProps } = props\r\n    \r\n    return <Button {...defaultProps}\r\n        className={`${styles.appButton} ${fullWidth ? styles.fullWidth : '' }`}\r\n    >\r\n        { label }\r\n    </Button>\r\n}\r\n\r\nexport default AppButton;","// import styles from './AddPanorama.module.css';\r\nimport OffCanvasModal from './../off-canvas-modal/OffCanvasModal';\r\nimport Input from '../input/Input';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport AppButton from './../button/AppButton';\r\nimport { useState } from 'react';\r\nimport { useAppStore } from './../../hooks/store/useAppStore';\r\nimport { addNewPanoSelector } from './../../hooks/store/setters';\r\n\r\nconst panoFormInitialState = {\r\n    id: Date.now(),\r\n    name: '',\r\n    image: '',\r\n    pan: 0,\r\n    tilt: 0,\r\n    zoom: null,\r\n    cameraFree: true,\r\n    hotspots: []\r\n}\r\n\r\nconst AddPanoramaModal = ({ show, handleClose }) => {\r\n    \r\n    const [panoForm, setPanoForm] = useState({ ...panoFormInitialState });\r\n    \r\n    const addNewPano = useAppStore(addNewPanoSelector);\r\n    \r\n    const handleInputChange = ({ target: { name, value } }) => {\r\n        setPanoForm({\r\n            ...panoForm,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleInputToggle = ({ target: { name, value } }) => {\r\n        setPanoForm({\r\n            ...panoForm,\r\n            [name]: !panoForm[name]\r\n        })\r\n    }\r\n    \r\n    const handleFormSubmit = () => {\r\n        console.log('add new pano ', panoForm);\r\n        addNewPano(panoForm);\r\n    }\r\n    \r\n    const ModalFooter = () => {\r\n        return (\r\n            <Row>\r\n                <Col md={6}>\r\n                    <AppButton\r\n                        label=\"Save\"\r\n                        fullWidth\r\n                        onClick={handleFormSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={6}>\r\n                    <AppButton variant=\"secondary\" \r\n                        label=\"Close\"\r\n                        fullWidth\r\n                        onClick={handleClose}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n    \r\n    if (!show) return null;\r\n    \r\n    return (\r\n        <OffCanvasModal title=\"Add Panorama\"\r\n            show={show}\r\n            onClose={handleClose}\r\n            footer={<ModalFooter />}\r\n        >\r\n            <div className={StyleSheet.addPanoramaForm}>\r\n                <Input \r\n                    label=\"Pano Name\" \r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={panoForm.name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <Input \r\n                    label=\"Pano Image Url\" \r\n                    type=\"text\"\r\n                    name=\"image\"\r\n                    value={panoForm.image}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <Input \r\n                    label=\"Allow Look Around\" \r\n                    type=\"checkbox\"\r\n                    name=\"cameraFree\"\r\n                    checked={!!panoForm.cameraFree}\r\n                    onChange={handleInputToggle}\r\n                />\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Input \r\n                            label=\"Pan\" \r\n                            type=\"number\"\r\n                            name=\"pan\"\r\n                            value={panoForm.pan}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Input \r\n                            label=\"Tilt\" \r\n                            type=\"number\"\r\n                            name=\"tilt\"\r\n                            value={panoForm.tilt}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </OffCanvasModal>\r\n    )\r\n}\r\n\r\nexport default AddPanoramaModal;","import styles from \"./AddPanorama.module.css\";\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport AddPanoramaModal from \"./AddPanoramaModal\";\r\nimport { useState } from \"react\";\r\n\r\nconst AddPanoramaButton = () => {\r\n    \r\n    const [show, setShow] = useState(false);\r\n    \r\n    const hideModal = () => setShow(false);\r\n    \r\n    return (\r\n        <>\r\n            <Button \r\n                className={styles.AddPanoBtn}\r\n                onClick={() => setShow(true)}\r\n            >\r\n                <MdAdd />\r\n            </Button>\r\n            \r\n            { show && <AddPanoramaModal show={show} handleClose={hideModal} /> }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPanoramaButton;","// import styles from './EditPanorama.module.css';\r\nimport OffCanvasModal from './../off-canvas-modal/OffCanvasModal';\r\nimport Input from '../input/Input';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport AppButton from './../button/AppButton';\r\nimport { useState } from 'react';\r\nimport { useAppStore } from './../../hooks/store/useAppStore';\r\nimport { updateCurrentPanoSelector } from './../../hooks/store/setters';\r\nimport { getCurrentPanoSelector } from '../../hooks/store/getters';\r\n\r\nconst EditPanoramaModal = ({ show, handleClose }) => {\r\n    \r\n    const currentPano = useAppStore(getCurrentPanoSelector);\r\n    const [panoForm, setPanoForm] = useState({ ...currentPano });\r\n    \r\n    const updateCurrentPano = useAppStore(updateCurrentPanoSelector);\r\n    \r\n    const handleInputChange = ({ target: { name, value } }) => {\r\n        console.log('handleInputChange ', {name, value});\r\n        \r\n        setPanoForm({\r\n            ...panoForm,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleInputToggle = ({ target: { name, value } }) => {\r\n        console.log('handleInputToggle ', {name, value: !panoForm[name]});\r\n        \r\n        setPanoForm({\r\n            ...panoForm,\r\n            [name]: !panoForm[name]\r\n        })\r\n    }\r\n    \r\n    const handleFormSubmit = () => {\r\n        console.log('add new pano ', panoForm);\r\n        updateCurrentPano(panoForm);\r\n    }\r\n    \r\n    const ModalFooter = () => {\r\n        return (\r\n            <Row>\r\n                <Col md={6}>\r\n                    <AppButton\r\n                        label=\"Save\"\r\n                        fullWidth\r\n                        onClick={handleFormSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={6}>\r\n                    <AppButton variant=\"secondary\" \r\n                        label=\"Close\"\r\n                        fullWidth\r\n                        onClick={handleClose}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n    \r\n    if (!show) return null;\r\n    \r\n    return (\r\n        <OffCanvasModal title=\"Edit Panorama\"\r\n            show={show}\r\n            onClose={handleClose}\r\n            footer={<ModalFooter />}\r\n        >\r\n            <div className={StyleSheet.addPanoramaForm}>\r\n                <Input \r\n                    label=\"Pano Name\" \r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={panoForm.name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <Input \r\n                    label=\"Arabic Pano Name\" \r\n                    type=\"text\"\r\n                    name=\"nameArabic\"\r\n                    value={panoForm.nameArabic}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <Input \r\n                    label=\"Pano Image Url\" \r\n                    type=\"text\"\r\n                    name=\"image\"\r\n                    value={panoForm.image}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <Input \r\n                    label=\"Allow Look Around\" \r\n                    type=\"checkbox\"\r\n                    name=\"cameraFree\"\r\n                    checked={!!panoForm.cameraFree}\r\n                    onChange={handleInputToggle}\r\n                />\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Input \r\n                            label=\"Pan\" \r\n                            type=\"number\"\r\n                            name=\"pan\"\r\n                            value={panoForm.pan}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Input \r\n                            label=\"Tilt\" \r\n                            type=\"number\"\r\n                            name=\"tilt\"\r\n                            value={panoForm.tilt}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </OffCanvasModal>\r\n    )\r\n}\r\n\r\nexport default EditPanoramaModal;","import styles from \"./EditPanorama.module.css\";\r\nimport { MdEdit } from \"react-icons/md\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport EditPanoramaModal from \"./EditPanoramaModal\";\r\nimport { useState } from \"react\";\r\n\r\nconst EditPanoramaButton = () => {\r\n    \r\n    const [show, setShow] = useState(false);\r\n    \r\n    const hideModal = () => setShow(false);\r\n    \r\n    return (\r\n        <>\r\n            <Button \r\n                variant=\"warning\"\r\n                className={styles.EditPanoBtn}\r\n                onClick={() => setShow(true)}\r\n            >\r\n                <MdEdit />\r\n            </Button>\r\n            \r\n            { show && <EditPanoramaModal show={show} handleClose={hideModal} /> }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditPanoramaButton;","import styles from './EventConfiguration.module.css';\r\nimport OffCanvasModal from './../off-canvas-modal/OffCanvasModal';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport AppButton from './../button/AppButton';\r\nimport { useState } from 'react';\r\nimport { useAppStore } from './../../hooks/store/useAppStore';\r\n\r\nconst EventConfigurationModal = ({ show, handleClose }) => {\r\n    \r\n    const eventData = useAppStore(state => state.event);\r\n    const [showExportData, setShowExportData] = useState(false);\r\n    \r\n    const handleFormSubmit = () => {};\r\n    \r\n    const copyToClipBoard = () => {\r\n        const text = JSON.stringify(eventData, null, 4);\r\n        navigator.clipboard.writeText(text);\r\n        document.execCommand(\"copy\");\r\n        window.alert('Copied!');\r\n    }\r\n    \r\n    const ModalFooter = () => {\r\n        return (\r\n            <Row>\r\n                <Col md={6}>\r\n                    <AppButton\r\n                        label=\"Save\"\r\n                        fullWidth\r\n                        onClick={handleFormSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={6}>\r\n                    <AppButton variant=\"secondary\" \r\n                        label=\"Close\"\r\n                        fullWidth\r\n                        onClick={handleClose}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n    \r\n    if (!show) return null;\r\n    \r\n    return (\r\n        <OffCanvasModal title=\"Event Configuration\"\r\n            show={show}\r\n            onClose={handleClose}\r\n            footer={<ModalFooter />}\r\n        >\r\n            <div className={styles.eventConfigForm}>\r\n                <div className={styles.eventExportDataHolder}>\r\n                    <h6>Event Data</h6>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            {\r\n                               showExportData ?  <AppButton\r\n                                    variant=\"outline-dark\"\r\n                                    label=\"Hide\"\r\n                                    fullWidth\r\n                                    onClick={() => setShowExportData(false)}\r\n                                /> : <AppButton\r\n                                    variant=\"outline-dark\"\r\n                                    label=\"View\"\r\n                                    fullWidth\r\n                                    onClick={() => setShowExportData(true)}\r\n                                />\r\n                            }\r\n                            \r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <AppButton variant=\"outline-dark\"\r\n                                label=\"Copy\"\r\n                                fullWidth\r\n                                onClick={copyToClipBoard}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        showExportData && <pre>\r\n                            { JSON.stringify(eventData, null, 4) }\r\n                        </pre>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </OffCanvasModal>\r\n    )\r\n}\r\n\r\nexport default EventConfigurationModal;","import styles from \"./EventConfiguration.module.css\";\r\nimport { MdSettings } from \"react-icons/md\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport EventConfigurationModal from \"./EventConfigurationModal\";\r\nimport { useState } from \"react\";\r\n\r\nconst EventConfigurationButton = () => {\r\n    \r\n    const [show, setShow] = useState(false);\r\n    \r\n    const hideModal = () => setShow(false);\r\n    \r\n    return (\r\n        <>\r\n            <Button \r\n                variant=\"dark\"\r\n                className={styles.EventConfigBtn}\r\n                onClick={() => setShow(true)}\r\n            >\r\n                <MdSettings />\r\n            </Button>\r\n            \r\n            { show && <EventConfigurationModal show={show} handleClose={hideModal} /> }\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default EventConfigurationButton;","import Input from '../input/Input';\r\nimport { useAppStore } from './../../hooks/store/useAppStore';\r\nimport { getCurrentPanoSelector, panosSelector } from './../../hooks/store/getters';\r\nimport { useEffect, useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst MoveHotspotForm = ({ handleInputChange, hotspot }) => {\r\n    \r\n    const panos = useAppStore(panosSelector);\r\n    const currentPano = useAppStore(getCurrentPanoSelector);\r\n\r\n    const [panosOptions, setPanoOptions] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const options = panos.map(p => ({ value: p.id, label: p.name }))\r\n                                .filter(o => o.value !== currentPano.id);\r\n        setPanoOptions(options)\r\n\r\n    }, [panos, currentPano])\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Header className=\"text-uppercase\">Move Details</Card.Header>\r\n                <Card.Body>\r\n                    <Input \r\n                        label=\"Transition Video\" \r\n                        type=\"text\"\r\n                        name=\"transitionVideo\"\r\n                        value={hotspot.transitionVideo}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Input \r\n                        label=\"Go To Pano\" \r\n                        type=\"select\"\r\n                        name=\"goToPano\"\r\n                        options={panosOptions}\r\n                        value={hotspot.goToPano}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MoveHotspotForm;","import { Button, Card } from \"react-bootstrap\";\r\nimport Input from \"../input/Input\";\r\n\r\nconst FORM_DATA_KEY = 'iframeDetails';\r\n\r\nconst IframeHotspotForm = ({ hotspotForm: hotspot, setHotspotForm }) => {\r\n\r\n    const handleFormInputChange = (e, formIdx, valueKey=\"value\") => {\r\n        const name = e.target.name;\r\n        const value = e.target[valueKey];\r\n\r\n        setHotspotForm(hotspotForm => ({\r\n            ...hotspotForm,\r\n            [FORM_DATA_KEY]: [\r\n                ...hotspotForm[FORM_DATA_KEY].map((data, idx) => {\r\n                    if (idx === formIdx) {\r\n                        return { \r\n                            ...data,  \r\n                            [name]: value\r\n                        }\r\n                    }\r\n                    return data\r\n                }),\r\n            ]\r\n        }))\r\n    }\r\n\r\n    const addNewForm = () => {\r\n        const newForm = {\r\n            title: '',\r\n            titleArabic: '',\r\n            url: '',\r\n        }\r\n\r\n        const data = hotspot[FORM_DATA_KEY] || []\r\n\r\n        setHotspotForm(hotspotForm => ({\r\n            ...hotspotForm,\r\n            [FORM_DATA_KEY]: [\r\n                ...data,\r\n                newForm\r\n            ]\r\n        }))\r\n    }\r\n\r\n    const deleteForm = formIdx => {\r\n        setHotspotForm(hotspotForm => ({\r\n            ...hotspotForm,\r\n            [FORM_DATA_KEY]: [\r\n                ...hotspotForm[FORM_DATA_KEY].filter((f, fIdx) => fIdx !== formIdx)\r\n            ]\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Header className=\"text-uppercase\">Iframe Details</Card.Header>\r\n                <Card.Body>\r\n                    <div>\r\n                        {\r\n                            hotspot[FORM_DATA_KEY]?.map((form, formIdx) => (\r\n                                <Card body bg=\"light\" className=\"mb-2\" key={formIdx} >\r\n                                    <Input \r\n                                        label=\"Title\" \r\n                                        type=\"text\"\r\n                                        name=\"title\"\r\n                                        value={form.title}\r\n                                        onChange={(e) => handleFormInputChange(e, formIdx)}\r\n                                    />\r\n                                    <Input \r\n                                        label=\"Arabic Title\" \r\n                                        type=\"text\"\r\n                                        name=\"titleArabic\"\r\n                                        value={form.titleArabic}\r\n                                        onChange={(e) => handleFormInputChange(e, formIdx)}\r\n                                    />\r\n                                    <Input \r\n                                        label=\"Link\" \r\n                                        type=\"text\"\r\n                                        name=\"url\"\r\n                                        value={form.url}\r\n                                        onChange={(e) => handleFormInputChange(e, formIdx)}\r\n                                    />\r\n                                    <Input \r\n                                        label=\"Disable Modal\" \r\n                                        type=\"checkbox\"\r\n                                        name=\"disableModal\"\r\n                                        checked={!!form.disableModal}\r\n                                        onChange={(e) => handleFormInputChange(e, formIdx, 'checked')}\r\n                                    />\r\n                                    <Button className=\"ms-1\" \r\n                                        variant=\"outline-danger\" \r\n                                        size=\"sm\"\r\n                                        onClick={() => deleteForm(formIdx)}\r\n                                    >Delete</Button>\r\n                                </Card>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <Button className=\"ms-1\" \r\n                            variant=\"dark\" \r\n                            onClick={addNewForm}\r\n                        >+ Add</Button>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IframeHotspotForm;","import { Button, Card } from \"react-bootstrap\";\r\nimport Input from \"../input/Input\";\r\n\r\nconst FORM_DATA_KEY = 'urlDetails';\r\n\r\nconst URLHotspotForm = ({ hotspotForm: hotspot, setHotspotForm }) => {\r\n\r\n    const handleFormInputChange = (e, formIdx) => {\r\n        const { name, value } = e.target;\r\n\r\n        setHotspotForm(hotspotForm => ({\r\n            ...hotspotForm,\r\n            [FORM_DATA_KEY]: [\r\n                ...hotspotForm[FORM_DATA_KEY].map((data, idx) => {\r\n                    if (idx === formIdx) {\r\n                        return { \r\n                            ...data,  \r\n                            [name]: value\r\n                        }\r\n                    }\r\n                    return data\r\n                }),\r\n            ]\r\n        }))\r\n    }\r\n\r\n    const addNewForm = () => {\r\n        const newForm = {\r\n            title: '',\r\n            url: '',\r\n        }\r\n\r\n        const data = hotspot[FORM_DATA_KEY] || []\r\n\r\n        setHotspotForm(hotspotForm => ({\r\n            ...hotspotForm,\r\n            [FORM_DATA_KEY]: [\r\n                ...data,\r\n                newForm\r\n            ]\r\n        }))\r\n    }\r\n\r\n    const deleteForm = formIdx => {\r\n        setHotspotForm(hotspotForm => ({\r\n            ...hotspotForm,\r\n            [FORM_DATA_KEY]: [\r\n                ...hotspotForm[FORM_DATA_KEY].filter((f, fIdx) => fIdx !== formIdx)\r\n            ]\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Header className=\"text-uppercase\">URL Details</Card.Header>\r\n                <Card.Body>\r\n                    <div>\r\n                        {\r\n                            hotspot[FORM_DATA_KEY]?.map((form, formIdx) => (\r\n                                <Card body bg=\"light\" className=\"mb-2\" key={formIdx} >\r\n                                    <Input \r\n                                        label=\"Title\" \r\n                                        type=\"text\"\r\n                                        name=\"title\"\r\n                                        value={form.title}\r\n                                        onChange={(e) => handleFormInputChange(e, formIdx)}\r\n                                    />\r\n                                    <Input \r\n                                        label=\"Link\" \r\n                                        type=\"text\"\r\n                                        name=\"url\"\r\n                                        value={form.url}\r\n                                        onChange={(e) => handleFormInputChange(e, formIdx)}\r\n                                    />\r\n                                    <Button className=\"ms-1\" \r\n                                        variant=\"outline-danger\" \r\n                                        size=\"sm\"\r\n                                        onClick={() => deleteForm(formIdx)}\r\n                                    >Delete</Button>\r\n                                </Card>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <Button className=\"ms-1\" \r\n                            variant=\"dark\" \r\n                            onClick={addNewForm}\r\n                        >+ Add</Button>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default URLHotspotForm;","import { Card, Col, Row } from \"react-bootstrap\";\r\nimport Input from \"../input/Input\";\r\n\r\nconst FORM_DATA_KEY = 'patchVideo3D';\r\n\r\nconst PatchVideo3DHotspotForm = ({ hotspotForm: hotspot, setHotspotForm }) => {\r\n\r\n    const handleFormInputChange = ({ target: { name, value } }) => {\r\n\r\n        const data = hotspot[FORM_DATA_KEY] || {};\r\n\r\n        setHotspotForm(hotspotForm => ({\r\n            ...hotspotForm,\r\n            [FORM_DATA_KEY]: {\r\n                ...data,\r\n                [name]: value\r\n            }\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Header className=\"text-uppercase\">3D Video Patch</Card.Header>\r\n                <Card.Body>\r\n                    <Input \r\n                        label=\"Video Source\" \r\n                        type=\"text\"\r\n                        name=\"patchSource\"\r\n                        value={hotspot[FORM_DATA_KEY]?.patchSource}\r\n                        onChange={handleFormInputChange}\r\n                    />\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Input \r\n                                label=\"Patch Width\" \r\n                                type=\"number\"\r\n                                name=\"patchWidth\"\r\n                                value={hotspot[FORM_DATA_KEY]?.patchWidth}\r\n                                onChange={handleFormInputChange}\r\n                            />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <Input \r\n                                label=\"Patch Height\" \r\n                                type=\"number\"\r\n                                name=\"patchHeight\"\r\n                                value={hotspot[FORM_DATA_KEY]?.patchHeight}\r\n                                onChange={handleFormInputChange}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PatchVideo3DHotspotForm;","import { Button, Card } from \"react-bootstrap\";\r\nimport Input from \"../input/Input\";\r\n\r\nconst FORM_DATA_KEY = 'pdfDetails';\r\n\r\nconst PDFHotspotForm = ({ hotspotForm: hotspot, setHotspotForm }) => {\r\n\r\n    const handleFormInputChange = (e, formIdx) => {\r\n        const { name, value } = e.target;\r\n\r\n        setHotspotForm(hotspotForm => ({\r\n            ...hotspotForm,\r\n            [FORM_DATA_KEY]: [\r\n                ...hotspotForm[FORM_DATA_KEY].map((data, idx) => {\r\n                    if (idx === formIdx) {\r\n                        return { \r\n                            ...data,  \r\n                            [name]: value\r\n                        }\r\n                    }\r\n                    return data\r\n                }),\r\n            ]\r\n        }))\r\n    }\r\n\r\n    const addNewForm = () => {\r\n        const newForm = {\r\n            title: '',\r\n            url: '',\r\n        }\r\n\r\n        const data = hotspot[FORM_DATA_KEY] || []\r\n\r\n        setHotspotForm(hotspotForm => ({\r\n            ...hotspotForm,\r\n            [FORM_DATA_KEY]: [\r\n                ...data,\r\n                newForm\r\n            ]\r\n        }))\r\n    }\r\n\r\n    const deleteForm = formIdx => {\r\n        setHotspotForm(hotspotForm => ({\r\n            ...hotspotForm,\r\n            [FORM_DATA_KEY]: [\r\n                ...hotspotForm[FORM_DATA_KEY].filter((f, fIdx) => fIdx !== formIdx)\r\n            ]\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Header className=\"text-uppercase\">PDF Details</Card.Header>\r\n                <Card.Body>\r\n                    <div>\r\n                        {\r\n                            hotspot[FORM_DATA_KEY]?.map((form, formIdx) => (\r\n                                <Card body bg=\"light\" className=\"mb-2\" key={formIdx} >\r\n                                    <Input \r\n                                        label=\"Title\" \r\n                                        type=\"text\"\r\n                                        name=\"title\"\r\n                                        value={form.title}\r\n                                        onChange={(e) => handleFormInputChange(e, formIdx)}\r\n                                    />\r\n                                    <Input \r\n                                        label=\"Link\" \r\n                                        type=\"text\"\r\n                                        name=\"url\"\r\n                                        value={form.url}\r\n                                        onChange={(e) => handleFormInputChange(e, formIdx)}\r\n                                    />\r\n                                    <Button className=\"ms-1\" \r\n                                        variant=\"outline-danger\" \r\n                                        size=\"sm\"\r\n                                        onClick={() => deleteForm(formIdx)}\r\n                                    >Delete</Button>\r\n                                </Card>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <Button className=\"ms-1\" \r\n                            variant=\"dark\" \r\n                            onClick={addNewForm}\r\n                        >+ Add</Button>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PDFHotspotForm;","import { HOTSPOT_TYPES } from './../../constants/hotspot.constant';\r\nimport MoveHotspotForm from './MoveHotspotForm';\r\nimport IframeHotspotForm from './IframeHotspotForm';\r\nimport URLHotspotForm from './URLHotspotForm';\r\nimport PatchVideo3DHotspotForm from './PatchVideo3DHotspotForm';\r\nimport PDFHotspotForm from './PDFHotspotForm';\r\n\r\nconst HotspotDetailsForm = ({ hotspotForm, handleInputChange, setHotspotForm }) => {\r\n    \r\n    switch (hotspotForm.type) {\r\n        case HOTSPOT_TYPES.MOVE:\r\n            return <MoveHotspotForm hotspot={hotspotForm} \r\n                handleInputChange={handleInputChange} \r\n            />\r\n    \r\n        case HOTSPOT_TYPES.IFRAME:\r\n            return <IframeHotspotForm hotspotForm={hotspotForm} \r\n                setHotspotForm={setHotspotForm} \r\n            />\r\n    \r\n        case HOTSPOT_TYPES.URL:\r\n            return <URLHotspotForm hotspotForm={hotspotForm} \r\n                setHotspotForm={setHotspotForm} \r\n            />\r\n    \r\n        case HOTSPOT_TYPES.PATCHVIDEO3D:\r\n            return <PatchVideo3DHotspotForm hotspotForm={hotspotForm} \r\n                setHotspotForm={setHotspotForm} \r\n            />\r\n    \r\n        case HOTSPOT_TYPES.PDF:\r\n            return <PDFHotspotForm hotspotForm={hotspotForm} \r\n                setHotspotForm={setHotspotForm} \r\n            />\r\n    \r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nexport default HotspotDetailsForm;","import styles from './HotspotConfigModal.module.css';\r\nimport { useAppStore } from './../../hooks/store/useAppStore';\r\nimport { getCurrentHotspotSelector, showHotspotConfigModalSelector } from './../../hooks/store/getters';\r\nimport { deleteCurrentHotspotSelector, setCurrentHotspotSelector, setShowHotspotConfigModalSelector, updateCurrentHotspotSelector } from './../../hooks/store/setters';\r\nimport OffCanvasModal from './../off-canvas-modal/OffCanvasModal';\r\nimport Input from '../input/Input';\r\nimport { Card, Col, Row } from 'react-bootstrap';\r\nimport AppButton from './../button/AppButton';\r\nimport { HOTSPOT_TYPES } from '../../constants/hotspot.constant'\r\nimport { useEffect, useState } from 'react';\r\nimport HotspotDetailsForm from './HotspotDetailsForm';\r\n\r\nconst hotspotTypeOptions = Object.values(HOTSPOT_TYPES).map(v => ({ value: v, label: v }))\r\n\r\nconst HotspotConfigModal = (props) => {\r\n    \r\n    const showHotspotConfigModal = useAppStore(showHotspotConfigModalSelector);\r\n    const setShowHotspotConfigModal = useAppStore(setShowHotspotConfigModalSelector);\r\n    const currentHotspot = useAppStore(getCurrentHotspotSelector);\r\n    const setCurrentHotspot = useAppStore(setCurrentHotspotSelector);\r\n    const updateCurrentHotspot = useAppStore(updateCurrentHotspotSelector);\r\n    const deleteCurrentHotspot = useAppStore(deleteCurrentHotspotSelector);\r\n    \r\n    const { hotspot, index } = currentHotspot;\r\n\r\n    const [hotspotForm, setHotspotForm] = useState({ ...hotspot });\r\n\r\n    useEffect(() => {\r\n        if (currentHotspot && currentHotspot.hotspot) {\r\n            console.log('hotspot config modal data ', currentHotspot);\r\n            \r\n            setHotspotForm(currentHotspot.hotspot)\r\n        }\r\n    }, [currentHotspot])\r\n\r\n    const handleInputChange = ({ target: { name, value } }) => {\r\n        setHotspotForm({\r\n            ...hotspotForm,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleFormSubmit = () => {\r\n        console.log('hotspotForm ', {hotspotForm, index});\r\n        updateCurrentHotspot(hotspotForm, index);\r\n    }\r\n\r\n    const deleteHotspot = () => {\r\n        console.log('delete hotspot ', {hotspotForm, index});\r\n        deleteCurrentHotspot(index);\r\n        handleModalClose();\r\n        \r\n    }\r\n    \r\n    const handlePositionChange = ({ target: { name, value } }) => {\r\n        setHotspotForm({\r\n            ...hotspotForm,\r\n            position: {\r\n                ...hotspotForm.position,\r\n                [name]: parseFloat(value)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const handleModalClose = () => {\r\n        setShowHotspotConfigModal(false)\r\n        setCurrentHotspot({})\r\n        setHotspotForm({})\r\n    }\r\n    \r\n    const ModalFooter = () => {\r\n        return (\r\n            <Row>\r\n                <Col md={4}>\r\n                    <AppButton\r\n                        label=\"Save\"\r\n                        fullWidth\r\n                        onClick={handleFormSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={4}>\r\n                    <AppButton\r\n                        variant=\"outline-danger\"\r\n                        label=\"Delete\"\r\n                        fullWidth\r\n                        onClick={deleteHotspot}\r\n                    />\r\n                </Col>\r\n                <Col md={4}>\r\n                    <AppButton variant=\"outline-secondary\" \r\n                        label=\"Close\"\r\n                        fullWidth\r\n                        onClick={handleModalClose}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n    \r\n    if (!showHotspotConfigModal || !currentHotspot) return null;\r\n    \r\n    return (\r\n        <OffCanvasModal title=\"Hotspot Details\"\r\n            show={showHotspotConfigModal}\r\n            onClose={handleModalClose}\r\n            footer={<ModalFooter />}\r\n        >\r\n            <div className={styles.hotspotConfigForm}>\r\n                {/* <pre>{ JSON.stringify(hotspotForm, null, 4) }</pre> */}\r\n                <Input \r\n                    label=\"Hotspot Name\" \r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={hotspotForm.name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <Input \r\n                    label=\"Arabic Hotspot Name\" \r\n                    type=\"text\"\r\n                    name=\"nameArabic\"\r\n                    value={hotspotForm.nameArabic}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <Input \r\n                    label=\"Hotspot Icon\" \r\n                    type=\"text\"\r\n                    name=\"hotspotIcon\"\r\n                    value={hotspotForm.hotspotIcon}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <Input \r\n                    label=\"Hotspot Type\" \r\n                    type=\"select\"\r\n                    name=\"type\"\r\n                    options={hotspotTypeOptions}\r\n                    value={hotspotForm.type}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <div className=\"pb-1\"></div>\r\n                \r\n                <Card className=\"my-2\">\r\n                    <Card.Header className=\"text-uppercase\">Position</Card.Header>\r\n                    <Card.Body>\r\n                        {/* <Card.Subtitle>Position</Card.Subtitle> */}\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <Input \r\n                                    label=\"X-axis\" \r\n                                    type=\"number\"\r\n                                    name=\"x\"\r\n                                    value={parseFloat(hotspotForm?.position?.x).toFixed(2)}\r\n                                    onChange={handlePositionChange}\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Input \r\n                                    label=\"Y-axis\" \r\n                                    type=\"number\"\r\n                                    name=\"y\"\r\n                                    value={parseFloat(hotspotForm?.position?.y).toFixed(2)}\r\n                                    onChange={handlePositionChange}\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Input \r\n                                    label=\"Z-axis\" \r\n                                    type=\"number\"\r\n                                    name=\"z\"\r\n                                    value={parseFloat(hotspotForm?.position?.z).toFixed(2)}\r\n                                    onChange={handlePositionChange}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n                \r\n                <HotspotDetailsForm \r\n                    hotspotForm={hotspotForm} \r\n                    setHotspotForm={setHotspotForm} \r\n                    handleInputChange={handleInputChange}\r\n                />\r\n            </div>\r\n        </OffCanvasModal>\r\n    )\r\n}\r\n\r\nexport default HotspotConfigModal;","import styles from './ManageEvent.module.css';\r\nimport Panorama from './../panorama/Panorama';\r\nimport Header from './../../components/header/Header';\r\nimport AddPanoramaButton from './../../components/add-panorama/AddPanoramaButton';\r\nimport EditPanoramaButton from '../../components/edit-panorama/EditPanoramaButton';\r\nimport EventConfigurationButton from './../../components/event-configuration/EventConfigurationButton';\r\nimport HotspotConfigModal from './../../components/hotspot-config-modal/HotspotConfigModal';\r\nimport WelcomeVideo from '../../components/welcome-video/WelcomeVideo';\r\nimport { useEffect, useState } from 'react';\r\nimport LoadingScreen from '../../components/loading-screen/LoadingScreen';\r\nimport PreloadPanos from '../../components/preload/PreloadPanos';\r\nimport { Suspense } from 'react';\r\nimport { useProgress } from '@react-three/drei';\r\n\r\nconst ManageEvent = () => {\r\n    \r\n\r\n    const [showLoader, setShowLoader] = useState(true);\r\n    const [showWelcomeVideo, setShowWelcomeVideo] = useState(false);\r\n    const [showPanorama, setShowPanorama] = useState(false);\r\n\r\n    const [loadPercentValue, setLoadPercentValue] = useState(0);\r\n\r\n    const onWelcomeVideoEnded = () => {\r\n        console.log('welcome video ended. Starting panorama');\r\n        setShowPanorama(true);\r\n        setShowWelcomeVideo(false);\r\n    }\r\n\r\n    const startYourExperience = () => {\r\n        setShowWelcomeVideo(true);\r\n        setShowLoader(false);\r\n    }\r\n\r\n    const Loader = () => {\r\n        console.log('Loader called');\r\n        const { active, progress, errors, item, loaded, total } = useProgress()\r\n        // const progress = useProgress();\r\n        \r\n        useEffect(() => {\r\n            console.log('loader useProgress ', progress);\r\n            setLoadPercentValue(progress)\r\n        }, [progress])\r\n\r\n        return null;\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n\r\n            {\r\n                showLoader && <LoadingScreen \r\n                    show={showLoader} \r\n                    startYourExperience={startYourExperience}\r\n                    percentage={loadPercentValue}\r\n                />\r\n            }\r\n\r\n            <Header />\r\n\r\n            <Suspense fallback={<Loader />}>\r\n                <PreloadPanos />\r\n            </Suspense>\r\n\r\n            { showPanorama && <Panorama viewMode={false} /> }\r\n\r\n            { showWelcomeVideo && <WelcomeVideo onVideoEnded={onWelcomeVideoEnded} /> }\r\n\r\n            <HotspotConfigModal />\r\n\r\n            <div className={styles.fabContainer}>\r\n                <AddPanoramaButton />\r\n                <EditPanoramaButton />\r\n                <EventConfigurationButton />\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ManageEvent;","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Event from './containers/event/Event';\r\nimport ManageEvent from \"./containers/manage-event/ManageEvent\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Event} />\r\n          <Route exact path=\"/manage-event\" component={ManageEvent} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// Importing the Bootstrap CSS\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// Importing custom scrollbar css\r\nimport \"simplebar/src/simplebar.css\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pdfWrapper\":\"PDFViewer_pdfWrapper__2O0__\",\"pdfNavbar\":\"PDFViewer_pdfNavbar__dd1hn\",\"pdfNav\":\"PDFViewer_pdfNav__1UJOe\",\"pdfnavDisabled\":\"PDFViewer_pdfnavDisabled__NfQ2s\",\"pageWrapper\":\"PDFViewer_pageWrapper__30Boy\",\"pdfContentWrapper\":\"PDFViewer_pdfContentWrapper__1-gju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hotspot\":\"Hotspot_hotspot__2FneP\",\"hotspotImg\":\"Hotspot_hotspotImg__10jSA\",\"hotspoterror\":\"Hotspot_hotspoterror__1TY39\",\"hotspotTextContainer\":\"Hotspot_hotspotTextContainer__WcNbi\",\"hotspotDisplayName\":\"Hotspot_hotspotDisplayName__1V3_h\",\"iframeWrapper\":\"Hotspot_iframeWrapper__1eBOK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"Input_formGroup__KZVOz\",\"label\":\"Input_label__3gGJj\",\"input\":\"Input_input___hcQM\",\"textarea\":\"Input_textarea__X2V0i\",\"select\":\"Input_select__13c0j\",\"dark\":\"Input_dark__3BC8-\",\"error\":\"Input_error__33lE7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"offCanvasModalContainer\":\"OffCanvasModal_offCanvasModalContainer__1KxR-\",\"slideFromRight\":\"OffCanvasModal_slideFromRight__fT6Yg\",\"offCanvasModalBackdrop\":\"OffCanvasModal_offCanvasModalBackdrop__3auvM\",\"modalHeader\":\"OffCanvasModal_modalHeader__1QjLJ\",\"modalCloseBtn\":\"OffCanvasModal_modalCloseBtn__1dzo4\",\"modalFooter\":\"OffCanvasModal_modalFooter__abFIa\",\"modalBody\":\"OffCanvasModal_modalBody__eLBU8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenu\":\"UserMenu_userMenu__3IbRj\",\"userMenuItem\":\"UserMenu_userMenuItem__29ATj\",\"langSelectorBtn\":\"UserMenu_langSelectorBtn__1yefA\",\"forceRTL\":\"UserMenu_forceRTL__3XYX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EventConfigBtn\":\"EventConfiguration_EventConfigBtn__3BYYz\",\"eventExportDataHolder\":\"EventConfiguration_eventExportDataHolder__1UC7V\"};"],"sourceRoot":""}